/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package stockinventorymanagement;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Anish
 */
public class exploreIssue extends javax.swing.JFrame {

    /** Creates new form handleIssue */
    public exploreIssue() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btncat = new javax.swing.ButtonGroup();
        btndept = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        cbop = new javax.swing.JComboBox<>();
        pnledit = new javax.swing.JPanel();
        calissue = new com.toedter.calendar.JDateChooser();
        btnedit = new javax.swing.JButton();
        txtissue = new javax.swing.JTextField();
        lblexp = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        txtitem = new javax.swing.JTextField();
        lblitem = new javax.swing.JLabel();
        lbloq = new javax.swing.JLabel();
        lblbatch = new javax.swing.JLabel();
        txtbatch = new javax.swing.JTextField();
        lblexp1 = new javax.swing.JLabel();
        txten = new javax.swing.JTextField();
        rbt = new javax.swing.JRadioButton();
        rbot = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        rbg = new javax.swing.JRadioButton();
        rbl = new javax.swing.JRadioButton();
        rbo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        chkcid = new javax.swing.JCheckBox();
        txtiq = new javax.swing.JTextField();
        cbsrch = new javax.swing.JComboBox<>();
        sep = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnempty = new javax.swing.JButton();
        btnsrch = new javax.swing.JButton();
        scrissue = new javax.swing.JScrollPane();
        tblissue = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtcrit = new javax.swing.JTextField();
        calcrit = new com.toedter.calendar.JDateChooser();
        cbcrit = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Explore Issue Master");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(62, 53, 171));
        jLabel2.setText("Search Field");
        jLabel2.setToolTipText("");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        cbop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<", ">=", "<=", "!=" }));
        cbop.setToolTipText("");
        getContentPane().add(cbop, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        pnledit.setBackground(new java.awt.Color(141, 230, 247));
        pnledit.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Issue Master"));
        pnledit.setToolTipText("");
        pnledit.setPreferredSize(new java.awt.Dimension(1200, 900));

        calissue.setEnabled(false);
        calissue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                calissueFocusGained(evt);
            }
        });
        calissue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calissueMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                calissueMousePressed(evt);
            }
        });

        btnedit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnedit.setText("Edit Details");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        txtissue.setEditable(false);
        txtissue.setEnabled(false);

        lblexp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblexp.setForeground(new java.awt.Color(62, 53, 171));
        lblexp.setText("Issue Date :");

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setText("Save Changes");
        btnsave.setEnabled(false);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        txtitem.setEditable(false);
        txtitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtitemActionPerformed(evt);
            }
        });

        lblitem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblitem.setForeground(new java.awt.Color(62, 53, 171));
        lblitem.setText("Item Name :");

        lbloq.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbloq.setForeground(new java.awt.Color(62, 53, 171));
        lbloq.setText("Issue Qty. :");

        lblbatch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblbatch.setForeground(new java.awt.Color(62, 53, 171));
        lblbatch.setText("Batch No. :");

        txtbatch.setEditable(false);
        txtbatch.setEnabled(false);
        txtbatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbatchActionPerformed(evt);
            }
        });

        lblexp1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblexp1.setForeground(new java.awt.Color(62, 53, 171));
        lblexp1.setText("Employee Name :");

        txten.setEnabled(false);

        btncat.add(rbt);
        rbt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbt.setForeground(new java.awt.Color(62, 53, 171));
        rbt.setText("Trauma");
        rbt.setEnabled(false);
        rbt.setOpaque(false);

        btncat.add(rbot);
        rbot.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbot.setForeground(new java.awt.Color(62, 53, 171));
        rbot.setText("O.T.");
        rbot.setEnabled(false);
        rbot.setOpaque(false);
        rbot.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbotItemStateChanged(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(214, 223, 245));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Select a Department"));

        btndept.add(rbg);
        rbg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbg.setForeground(new java.awt.Color(62, 53, 171));
        rbg.setText("Gynaec");
        rbg.setEnabled(false);
        rbg.setOpaque(false);

        btndept.add(rbl);
        rbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbl.setForeground(new java.awt.Color(62, 53, 171));
        rbl.setText("Labor");
        rbl.setEnabled(false);
        rbl.setOpaque(false);

        btndept.add(rbo);
        rbo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbo.setForeground(new java.awt.Color(62, 53, 171));
        rbo.setText("Ortho");
        rbo.setEnabled(false);
        rbo.setOpaque(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbg)
                    .addComponent(rbl)
                    .addComponent(rbo))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(rbg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbo))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(62, 53, 171));
        jLabel1.setText("Department :");

        chkcid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chkcid.setForeground(new java.awt.Color(62, 53, 171));
        chkcid.setText("Change Issue Date :");
        chkcid.setEnabled(false);
        chkcid.setOpaque(false);
        chkcid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkcidItemStateChanged(evt);
            }
        });

        txtiq.setEditable(false);
        txtiq.setEnabled(false);

        javax.swing.GroupLayout pnleditLayout = new javax.swing.GroupLayout(pnledit);
        pnledit.setLayout(pnleditLayout);
        pnleditLayout.setHorizontalGroup(
            pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnleditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblitem)
                            .addComponent(lbloq)
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblexp1)
                                    .addComponent(lblbatch))
                                .addGap(79, 79, 79)
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txten, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtbatch, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtiq)
                                        .addComponent(txtitem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnsave))
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGap(6, 224, Short.MAX_VALUE)
                                .addComponent(rbt)
                                .addGap(18, 18, 18)
                                .addComponent(rbot)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(chkcid)
                                    .addComponent(lblexp))
                                .addGap(18, 18, 18)
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calissue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtissue)))))
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnleditLayout.setVerticalGroup(
            pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnleditLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(btnedit)
                .addGap(18, 18, 18)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblexp)
                    .addComponent(txtissue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblitem))
                .addGap(33, 33, 33)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calissue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtbatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkcid)
                        .addComponent(lblbatch)))
                .addGap(18, 18, 18)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnleditLayout.createSequentialGroup()
                            .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbloq)
                                .addComponent(txtiq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rbt)
                                .addComponent(rbot))
                            .addGap(18, 18, 18)
                            .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblexp1)
                                .addComponent(txten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnsave))
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnledit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 1170, 370));

        cbsrch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Field", "itemName", "batchNo", "issueQty", "empName", "issueDate", "issueDept" }));
        cbsrch.setToolTipText("");
        cbsrch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbsrchItemStateChanged(evt);
            }
        });
        cbsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbsrchActionPerformed(evt);
            }
        });
        getContentPane().add(cbsrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));
        getContentPane().add(sep, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 1160, 10));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(62, 53, 171));
        jLabel3.setText("Criteria");
        jLabel3.setToolTipText("");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        jSeparator1.setToolTipText("");
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 78, 1160, 10));

        btnempty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnempty.setText("Empty Table");
        btnempty.setToolTipText("");
        btnempty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnemptyActionPerformed(evt);
            }
        });
        getContentPane().add(btnempty, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, -1, -1));

        btnsrch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsrch.setText("Search in the database");
        btnsrch.setToolTipText("");
        btnsrch.setEnabled(false);
        btnsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchActionPerformed(evt);
            }
        });
        getContentPane().add(btnsrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 240, -1));

        scrissue.setToolTipText("");

        tblissue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Item Name", "Batch No.", "Issue Qty.", "Emp. Name", "Issue Date", "Issue Dept."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblissue.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrissue.setViewportView(tblissue);

        getContentPane().add(scrissue, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 1160, 340));

        jPanel1.setBackground(new java.awt.Color(214, 223, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        txtcrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcritActionPerformed(evt);
            }
        });
        txtcrit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtcritPropertyChange(evt);
            }
        });
        txtcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcritKeyTyped(evt);
            }
        });
        jPanel1.add(txtcrit);

        calcrit.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                calcritInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        calcrit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calcritPropertyChange(evt);
            }
        });
        calcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                calcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                calcritKeyTyped(evt);
            }
        });
        jPanel1.add(calcrit);

        cbcrit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));
        cbcrit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbcritItemStateChanged(evt);
            }
        });
        cbcrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbcritActionPerformed(evt);
            }
        });
        cbcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbcritKeyTyped(evt);
            }
        });
        jPanel1.add(cbcrit);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 36, 960, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nisarg1200.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbsrchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbsrchItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbsrchItemStateChanged

    private void cbsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbsrchActionPerformed
        // TODO add your handling code here:
        String sfld = (String) cbsrch.getSelectedItem();
        if(sfld.equals("Select Field"))
        {
            txtcrit.setText("");
            btnsrch.setEnabled(false);
            txtcrit.setVisible(false);
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.setVisible(false);
            DefaultTableModel model = (DefaultTableModel) tblissue.getModel();
            while (model.getRowCount()>0)
            model.removeRow(0);
        }
        else if(sfld.equals("issueDate"))
        {
            txtcrit.setText("");
            String date=((JTextField)calcrit.getDateEditor().getUiComponent()).getText() + "";
            if(date.equals(""))
            {
                btnsrch.setEnabled(false);
            }
            else
            {
                btnsrch.setEnabled(true);
            }
            calcrit.setVisible(true);
            txtcrit.setVisible(false);
            cbcrit.setVisible(false);
            cbop.setVisible(false);
        }
        else if(sfld.equals("itemName"))
        {
            txtcrit.setText("");
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select itemName from itemmaster ORDER BY ITEMNAME;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String itemName = rs.getString("itemName");
                    cbcrit.addItem(itemName);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }

        }
        else if(sfld.equals("issueQty"))
        {
            txtcrit.setText("");
            btnsrch.setEnabled(false);
            calcrit.setVisible(false);
            cbop.setVisible(true);
            cbop.setSelectedIndex(0);
            txtcrit.setVisible(true);
            txtcrit.setText("");
            cbcrit.setVisible(false);
        }
        else if(sfld.equals("batchNo"))
        {
            txtcrit.setText("");
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select distinct batchNo from issuemaster;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String batchNo = rs.getString("batchNo");
                    cbcrit.addItem(batchNo);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        else if(sfld.equals("empName"))
        {
            txtcrit.setText("");
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query="SELECT DISTINCT EMPNAME FROM ISSUEMASTER ORDER BY EMPNAME;";
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next())
                {
                    String empname=rs.getString("empName");
                    cbcrit.addItem(empname);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        else if(sfld.equals("issueDept"))
        {
            txtcrit.setText("");
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            cbcrit.addItem("Trauma");
            cbcrit.addItem("Gynaec");
            cbcrit.addItem("Labor");
            cbcrit.addItem("Ortho");            
        }
    }//GEN-LAST:event_cbsrchActionPerformed

    private void btnemptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnemptyActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblissue.getModel();
        int rows = model.getRowCount();
        //Now remove all the rows from the current table model
        if (rows>0)
        {
            for(int i = 0; i<rows;i++)
            {
                model.removeRow(0);
            }
        }
    }//GEN-LAST:event_btnemptyActionPerformed

    private void btnsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchActionPerformed
        // TODO add your handling code here:
        btnempty.doClick();
        DefaultTableModel model = (DefaultTableModel) tblissue.getModel();
        int x,c=0;
        int iqlength =txtcrit.getText().length();
        for(x=0;x<iqlength;x++)
        {
            char a = txtcrit.getText().charAt(x);
            if(a<=57&&a>=48)
            {
                continue;
            }
            else
            {
                c++;
            }
        }
        if(c!=0)
        {
            JOptionPane.showMessageDialog(null,"Enter numbers to search for Quantities!");
        }
        else
        {
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String sfld = (String) cbsrch.getSelectedItem();
                String crit,query;
                if(sfld.equals("issueDate"))
                {
                    SimpleDateFormat sdf = new SimpleDateFormat("d MMM, yyyy");
                    crit = sdf.format(calcrit.getDate());
                    String cm = crit.substring(3,6);
                    String cy = crit.substring(8,12);
                    String cd = crit.substring(0,2);
                    String mon="";
                    if(cm.equals("Jan"))
                    {
                        mon="01";
                    }
                    else if(cm.equals("Feb"))
                    {
                        mon="02";
                    }
                    else if(cm.equals("Mar"))
                    {
                        mon="03";
                    }
                    else if(cm.equals("Apr"))
                    {
                        mon="04";
                    }
                    else if(cm.equals("May"))
                    {
                        mon="05";
                    }
                    else if(cm.equals("Jun"))
                    {
                        mon="06";
                    }
                    else if(cm.equals("Jul"))
                    {
                        mon="07";
                    }
                    else if(cm.equals("Aug"))
                    {
                        mon="08";
                    }
                    else if(cm.equals("Sep"))
                    {
                        mon="09";
                    }
                    else if(cm.equals("Oct"))
                    {
                        mon="10";
                    }
                    else if(cm.equals("Nov"))
                    {
                        mon="11";
                    }
                    else if(cm.equals("Dec"))
                    {
                        mon="12";
                    }
                    String date = cy+"-"+mon+"-"+cd;
                    query = "select * from issuemaster where ISSUEDATE = '"+date+"' order by issuedate;";
                }
                else if(sfld.equals("itemName")||sfld.equals("batchNo")||sfld.equals("issueDept")||sfld.equals("empName"))
                {
                    crit = (String) cbcrit.getSelectedItem();
                    query = "select * from issuemaster where "+sfld+" = '"+crit+"' order by issuedate;";
                }
                else
                {
                    crit = txtcrit.getText();
                    String crit1 = (String) cbop.getSelectedItem();
                    query = "select * from issuemaster where "+sfld+crit1+crit+" order by issuedate;";
                }
                ResultSet rs = stmt.executeQuery(query);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String iq= rs.getString("issueqty");
                    String issuedate = rs.getString("issueDate");
                    String empname = rs.getString("empname");
                    String issueDate = rs.getString("issueDate");                    
                    String date;
                    if(issuedate.equals("-"))
                    {
                        date = "-";
                    }
                    else
                    {
                        String cm = issuedate.substring(5,7);
                        String cy = issuedate.substring(0,4);
                        String cd = issuedate.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        date = cd+" "+mon+", "+cy;
                    }
                    String issuedept=rs.getString("issueDept");
                    model.addRow(new Object[] {r,itemname,batchno,iq,empname,date,issuedept});
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnsrchActionPerformed

    private void txtcritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcritActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtcritActionPerformed

    private void txtcritPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtcritPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_txtcritPropertyChange

    private void txtcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyPressed
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_txtcritKeyPressed

    private void txtcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyReleased
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_txtcritKeyReleased

    private void txtcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyTyped
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_txtcritKeyTyped

    private void calcritInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_calcritInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritInputMethodTextChanged

    private void calcritPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calcritPropertyChange
        // TODO add your handling code here:
        if(calcrit.getCalendar()==null)
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_calcritPropertyChange

    private void calcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritKeyPressed

    private void calcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritKeyReleased

    private void calcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritKeyTyped

    private void cbcritItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbcritItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritItemStateChanged

    private void cbcritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbcritActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritActionPerformed

    private void cbcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritKeyPressed

    private void cbcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritKeyReleased

    private void cbcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "select * from login";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            String user = rs.getString("username");            
            if(user.equals("Admin"))
            {
                String q = "select*from access;";
                ResultSet rs1 = stmt.executeQuery(q);
                while(rs1.next())
                {
                    String f = rs1.getString("feature");                    
                    if(f.equals("edit"))
                    {
                        pnledit.setEnabled(true);
                    }
                    else
                    {
                        sep.setVisible(false);
                        pnledit.setVisible(false);
                        this.setSize(1200,580);
                    }
                }
                rs1.close();
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        Color s=new Color(214,223,245);
        scrissue.getViewport().setBackground(s);
        txtcrit.setVisible(false);
        calcrit.setVisible(false);
        cbop.setVisible(false);
        cbcrit.setVisible(false);
        calissue.setMaxSelectableDate(new java.util.Date());
        calcrit.setMaxSelectableDate(new java.util.Date());
        txtbatch.setDisabledTextColor(Color.black);
        txtbatch.setBackground(Color.white);
        txtitem.setDisabledTextColor(Color.black);
        txtitem.setBackground(Color.white);    
        txtissue.setDisabledTextColor(Color.black);
        txtissue.setBackground(Color.white);
        txtiq.setDisabledTextColor(Color.black);
        txtiq.setBackground(Color.white);
        txten.setDisabledTextColor(Color.black);
        txten.setBackground(Color.white);
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calcrit.getDateEditor();            
        editor1.setEnabled(false);
        editor1.setBackground(Color.white);
        editor1.setDisabledTextColor(Color.black);
        calcrit.setMaxSelectableDate(new Date());
    }//GEN-LAST:event_formWindowOpened

    private void chkcidItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkcidItemStateChanged
        // TODO add your handling code here:
        if(chkcid.isSelected())
        {
            calissue.setEnabled(true);
            JTextFieldDateEditor editor = (JTextFieldDateEditor) calissue.getDateEditor();
            editor.setEnabled(false);
            editor.setBackground(Color.white);
            editor.setDisabledTextColor(Color.black);
        }
        else
        {
            calissue.setEnabled(false);
            JTextFieldDateEditor editor = (JTextFieldDateEditor) calissue.getDateEditor();
            editor.setEnabled(false);
            editor.setBackground(Color.white);
            editor.setDisabledTextColor(Color.black);
        }
    }//GEN-LAST:event_chkcidItemStateChanged

    private void rbotItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbotItemStateChanged
        // TODO add your handling code here:
        if(rbot.isSelected())
        {
            rbg.setEnabled(true);
            rbl.setEnabled(true);
            rbo.setEnabled(true);
        }
        else
        {
            rbg.setEnabled(false);
            rbl.setEnabled(false);
            rbo.setEnabled(false);
            btndept.clearSelection();
        }
    }//GEN-LAST:event_rbotItemStateChanged

    private void txtbatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbatchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbatchActionPerformed

    private void txtitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtitemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtitemActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String item, batch, iq, en, idate, dept="";
        item = txtitem.getText();
        batch = txtbatch.getText();
        iq = txtiq.getText();
        en = txten.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("d MMM, yyyy");
        idate = sdf.format(calissue.getDate());
        String date = idate.substring(0,2);
        String d,month,year;
        if(date.substring(1,2).equals(" "))
        {
            d = "0"+date.substring(0,1);
            month = idate.substring(2,5);
            year = idate.substring(7,11);
        }
        else
        {
            d = date;
            month = idate.substring(3,6);
            year = idate.substring(8,12);
        }
        String mon="";
        if(month.equals("Jan"))
        {
            mon="01";
        }
        else if(month.equals("Feb"))
        {
            mon="02";
        }
        else if(month.equals("Mar"))
        {
            mon="03";
        }
        else if(month.equals("Apr"))
        {
            mon="04";
        }
        else if(month.equals("May"))
        {
            mon="05";
        }
        else if(month.equals("Jun"))
        {
            mon="06";
        }
        else if(month.equals("Jul"))
        {
            mon="07";
        }
        else if(month.equals("Aug"))
        {
            mon="08";
        }
        else if(month.equals("Sep"))
        {
            mon="09";
        }
        else if(month.equals("Oct"))
        {
            mon="10";
        }
        else if(month.equals("Nov"))
        {
            mon="11";
        }
        else if(month.equals("Dec"))
        {
            mon="12";
        }
        idate = year+"-"+mon+"-"+d;
        if(rbt.isSelected())
        {
            dept = "Trauma";
        }
        else if(rbot.isSelected())
        {
            if(rbg.isSelected())
            {
                dept = "Gynaec";
            }
            else if(rbl.isSelected())
            {
                dept = "Labor";
            }
            else if(rbo.isSelected())
            {
                dept = "Ortho";
            }
        }
        if(en.equals("")||dept.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Fill in the required fields!");
        }
        else
        {
            try
            {
                Class.forName("java.sql.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stm = conn.createStatement();
                String update= "UPDATE ISSUEMASTER set empname='"+en+"',issuedate='"+idate+"', issuedept='"+dept+"' where itemname='"+item+"' and batchno='"+batch+"';";
                stm.executeUpdate(update);
                JOptionPane.showMessageDialog(null, "Record Saved successfully.");
                btnsave.setEnabled(false);
                txtitem.setText("");
                txtbatch.setText("");
                txtiq.setText("");
                txten.setText("");
                txtissue.setText("");
                btndept.clearSelection();
                btncat.clearSelection();
                txtitem.setEnabled(false);
                txtbatch.setEnabled(false);
                txtissue.setEnabled(false);
                txten.setEnabled(false);
                txtiq.setEnabled(false);
                rbot.setEnabled(false);
                rbt.setEnabled(false);
                rbl.setEnabled(false);
                rbg.setEnabled(false);
                rbo.setEnabled(false);
                calissue.setCalendar(null);
                JTextFieldDateEditor editor= (JTextFieldDateEditor) calissue.getDateEditor();
                editor.setEnabled(false);
                editor.setBackground(Color.white);
                editor.setDisabledTextColor(Color.black);
                txten.setDisabledTextColor(Color.black);
                txten.setBackground(Color.white);
                txtissue.setDisabledTextColor(Color.black);
                txtissue.setBackground(Color.white);
                btnsrch.doClick();
                chkcid.setSelected(false);
                chkcid.setEnabled(false);
                stm.close();
                conn.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        if(tblissue.getSelectionModel().isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the Table to Edit.");
        }
        else
        {
            try
            {
                chkcid.setEnabled(true);
                btnsave.setEnabled(true);
                txtbatch.setEnabled(true);
                txtitem.setEnabled(true);
                txtiq.setEnabled(true);
                txten.setEnabled(true);
                txtissue.setEnabled(true);
                chkcid.setEnabled(true);
                rbt.setEnabled(true);
                rbot.setEnabled(true);
                DefaultTableModel model=(DefaultTableModel) tblissue.getModel();
                int i = tblissue.getSelectedRow();
                String item = model.getValueAt(i,1).toString();
                txtitem.setText(item);
                String batch = model.getValueAt(i,2).toString();
                txtbatch.setText(batch);
                txtiq.setText(model.getValueAt(i,3).toString());
                txten.setText(model.getValueAt(i,4).toString());
                String cal=model.getValueAt(i,5).toString();
                txtissue.setText(cal);
                if(cal.compareTo("-")!=0)
                {
                    Date date=(Date)new SimpleDateFormat("d MMM, yyyy").parse(cal);
                    calissue.setDate(date);
                }
                else
                {
                    calissue.setDate(null);
                }
                String issuedept=model.getValueAt(i, 6).toString();
                if(issuedept.equals("Trauma"))
                {
                    rbt.setSelected(true);
                }
                else if(issuedept.equals("Gynaec")||issuedept.equals("Labor")||issuedept.equals("Ortho"))
                {
                    rbot.setSelected(true);
                    rbl.setEnabled(true);
                    rbg.setEnabled(true);
                    rbo.setEnabled(true);
                    if(issuedept.equals("Gynaec"))
                    {
                        rbg.setSelected(true);
                    }
                    else if(issuedept.equals("Labor"))
                    {
                        rbl.setSelected(true);
                    }
                    else if(issuedept.equals("Ortho"))
                    {
                        rbo.setSelected(true);
                    }
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
            txtbatch.setDisabledTextColor(Color.black);
            txtbatch.setBackground(Color.white);
            txtitem.setDisabledTextColor(Color.black);
            txtitem.setBackground(Color.white);
            txtiq.setDisabledTextColor(Color.black);
            txtiq.setBackground(Color.white);
            txtissue.setDisabledTextColor(Color.black);
            txtissue.setBackground(Color.white);
            JTextFieldDateEditor editor = (JTextFieldDateEditor) calissue.getDateEditor();
            editor.setEnabled(false);
            editor.setBackground(Color.white);
            editor.setDisabledTextColor(Color.black);
            JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calcrit.getDateEditor();
            editor1.setEnabled(false);
            editor1.setBackground(Color.white);
            editor1.setDisabledTextColor(Color.black);
        }
    }//GEN-LAST:event_btneditActionPerformed

    private void calissueMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calissueMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_calissueMousePressed

    private void calissueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calissueMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_calissueMouseClicked

    private void calissueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_calissueFocusGained

    }//GEN-LAST:event_calissueFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exploreIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exploreIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exploreIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exploreIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new exploreIssue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btncat;
    private javax.swing.ButtonGroup btndept;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnempty;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsrch;
    private com.toedter.calendar.JDateChooser calcrit;
    private com.toedter.calendar.JDateChooser calissue;
    private javax.swing.JComboBox<String> cbcrit;
    private javax.swing.JComboBox<String> cbop;
    private javax.swing.JComboBox<String> cbsrch;
    private javax.swing.JCheckBox chkcid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblbatch;
    private javax.swing.JLabel lblexp;
    private javax.swing.JLabel lblexp1;
    private javax.swing.JLabel lblitem;
    private javax.swing.JLabel lbloq;
    private javax.swing.JPanel pnledit;
    private javax.swing.JRadioButton rbg;
    private javax.swing.JRadioButton rbl;
    private javax.swing.JRadioButton rbo;
    private javax.swing.JRadioButton rbot;
    private javax.swing.JRadioButton rbt;
    private javax.swing.JScrollPane scrissue;
    private javax.swing.JSeparator sep;
    private javax.swing.JTable tblissue;
    private javax.swing.JTextField txtbatch;
    private javax.swing.JTextField txtcrit;
    private javax.swing.JTextField txten;
    private javax.swing.JTextField txtiq;
    private javax.swing.JTextField txtissue;
    private javax.swing.JTextField txtitem;
    // End of variables declaration//GEN-END:variables

}
