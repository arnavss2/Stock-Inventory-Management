/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockinventorymanagement;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.SimpleDateFormat;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
/**
 *
 * @author Arnav
 */
public class purchaseEntry extends javax.swing.JFrame {

    /**
     * Creates new form purchaseEntry
     */
    public purchaseEntry() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnss = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        calexp = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        txtbatch = new javax.swing.JTextField();
        btncancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtoq = new javax.swing.JTextField();
        chexp = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rbp = new javax.swing.JRadioButton();
        rbv = new javax.swing.JRadioButton();
        txtp = new javax.swing.JTextField();
        cbven = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        calpur = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        cbitem = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase Entry");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 0));
        jLabel9.setText("*");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 189, 14, 23));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 51, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("*");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 241, 10, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("*");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 252, 17, -1));

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setText(" Save ");
        btnsave.setEnabled(false);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 403, 100, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(62, 53, 171));
        jLabel2.setText("Item Name :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 206, -1, -1));

        calexp.setEnabled(false);
        getContentPane().add(calexp, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 296, 340, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(62, 53, 171));
        jLabel3.setText("Batch No. :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 251, -1, -1));

        txtbatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbatchActionPerformed(evt);
            }
        });
        getContentPane().add(txtbatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 247, 110, -1));

        btncancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel.setText("Cancel");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });
        getContentPane().add(btncancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 403, 100, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(62, 53, 171));
        jLabel4.setText("Opening Qty. :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 248, -1, -1));

        txtoq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtoqFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtoqFocusLost(evt);
            }
        });
        txtoq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtoqKeyTyped(evt);
            }
        });
        getContentPane().add(txtoq, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 247, 62, -1));

        chexp.setBackground(new java.awt.Color(140, 170, 230));
        chexp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chexp.setForeground(new java.awt.Color(62, 53, 171));
        chexp.setText("Expiry Date :");
        chexp.setOpaque(false);
        chexp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chexpItemStateChanged(evt);
            }
        });
        getContentPane().add(chexp, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 291, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 0));
        jLabel8.setText("* = Required Fields");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 386, -1, -1));

        jPanel1.setBackground(new java.awt.Color(141, 230, 247));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stock Supplier"));

        btnss.add(rbp);
        rbp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbp.setForeground(new java.awt.Color(62, 53, 171));
        rbp.setText("Patient");
        rbp.setOpaque(false);
        rbp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbpItemStateChanged(evt);
            }
        });

        btnss.add(rbv);
        rbv.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbv.setForeground(new java.awt.Color(62, 53, 171));
        rbv.setText("Vendor");
        rbv.setOpaque(false);
        rbv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbvItemStateChanged(evt);
            }
        });

        txtp.setEnabled(false);
        txtp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpKeyTyped(evt);
            }
        });

        cbven.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Vendor" }));
        cbven.setEnabled(false);
        cbven.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbvenItemStateChanged(evt);
            }
        });
        cbven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbvenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbp)
                    .addComponent(rbv))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtp)
                    .addComponent(cbven, 0, 347, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbp)
                    .addComponent(txtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbv)
                    .addComponent(cbven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 16, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 0));
        jLabel10.setText("(*)");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 16, 28, 23));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(62, 53, 171));
        jLabel1.setText("Purchase Date :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 344, -1, -1));
        getContentPane().add(calpur, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 340, 340, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 51, 0));
        jLabel14.setText("*");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 326, 20, 22));

        cbitem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Item" }));
        cbitem.setEnabled(false);
        cbitem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbitemItemStateChanged(evt);
            }
        });
        cbitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbitemActionPerformed(evt);
            }
        });
        getContentPane().add(cbitem, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 205, 340, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nisarg600.jpeg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String p, ven, item, batch, exp, oqs, pur;
        int oq;
        item = cbitem.getSelectedItem().toString();
        batch = txtbatch.getText();
        oqs = txtoq.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("d MMM, yyyy");
        pur = sdf.format(calpur.getDate());
        String date1 = pur.substring(0,2);
        String d1,month1,year1;
        if(date1.substring(1,2).equals(" "))
        {
            d1 = "0"+date1.substring(0,1);
            month1 = pur.substring(2,5);
            year1 = pur.substring(7,11);
        }
        else
        {
            d1 = date1;
            month1 = pur.substring(3,6);
            year1 = pur.substring(8,12);
        }
        String mon1="";
        if(month1.equals("Jan"))
        {
            mon1="01";
        }
        else if(month1.equals("Feb"))
        {
            mon1="02";
        }
        else if(month1.equals("Mar"))
        {
            mon1="03";
        }
        else if(month1.equals("Apr"))
        {
            mon1="04";
        }
        else if(month1.equals("May"))
        {
            mon1="05";
        }
        else if(month1.equals("Jun"))
        {
            mon1="06";
        }
        else if(month1.equals("Jul"))
        {
            mon1="07";
        }
        else if(month1.equals("Aug"))
        {
            mon1="08";
        }
        else if(month1.equals("Sep"))
        {
            mon1="09";
        }
        else if(month1.equals("Oct"))
        {
            mon1="10";
        }
        else if(month1.equals("Nov"))
        {
            mon1="11";
        }
        else if(month1.equals("Dec"))
        {
            mon1="12";
        }
        int y1 = Integer.parseInt(year1);
        int m1 = Integer.parseInt(mon1);
        pur = year1+"-"+mon1+"-"+d1;
        int temp=0;
        if(rbp.isSelected())
        {
            p = txtp.getText();
            ven = "-";
            if(p.equals("")||batch.equals("")||oqs.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Fill in the required fields!");
            }
            else
            {
                int oqslength = oqs.length();
                int x,c=0;
                for(x=0;x<oqslength;x++)
                {
                    char a = oqs.charAt(x);
                    if(a<=57&&a>=48)
                    {
                        continue;
                    }
                    else
                    {
                        c++;
                    }
                }
                if(c!=0)
                {
                    JOptionPane.showMessageDialog(null,"Enter numbers in opening quantity!");
                }
                else
                {
                    try
                    {
                        Class.forName("java.sql.Driver");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stm = conn.createStatement();
                        String query = "SELECT BATCHNO FROM STOCKMASTER WHERE ITEMNAME ='"+item+"';";
                        ResultSet rs =stm.executeQuery(query);
                        while(rs.next())
                        {
                            String batchno=rs.getString("batchno");
                            if(batchno.equals(batch))
                            {
                                temp=1;
                            }
                        }
                        rs.close();
                        stm.close();
                        conn.close();
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
                    if(temp==1)
                    {
                        JOptionPane.showMessageDialog(null,"Repetition of batch no. is not allowed! Try again.");
                    }
                    else
                    {
                        oq = Integer.parseInt(oqs);
                        if (chexp.isSelected()==false)
                        {
                            exp="-";
                            try
                            {
                                Class.forName("java.sql.Driver");
                                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                Statement stm = conn.createStatement();
                                String str = "INSERT INTO purchasemaster values('"+p+"','"+ven+"','"+item+"','"+batch+"','"+oqs+"','"+exp+"','"+pur+"');";
                                String str1 = "INSERT INTO stockMaster values('"+item+"','"+batch+"','"+oqs+"','"+exp+"');";
                                stm.executeUpdate(str1);
                                stm.executeUpdate(str);
                                JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                btnss.clearSelection();
                                txtp.setText("");
                                txtbatch.setText("");
                                txtoq.setText("");
                                chexp.setSelected(false);
                                JTextFieldDateEditor editor = (JTextFieldDateEditor) calpur.getDateEditor();
                                editor.setBackground(Color.white);
                                editor.setDisabledTextColor(Color.black);
                                cbven.setSelectedIndex(0);
                                cbitem.setSelectedIndex(0);
                                stm.close();
                                conn.close();
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(null,e);
                            }
                        }
                        else
                        {
                            if(calexp.getCalendar()==null)
                            {
                                JOptionPane.showMessageDialog(null,"Select an Expiry Date!");
                            }
                            else
                            {
                                SimpleDateFormat df = new SimpleDateFormat("d MMM, yyyy");
                                exp = df.format(calexp.getDate());
                                String date = exp.substring(0,2);
                                String d,month,year;
                                if(date.substring(1,2).equals(" "))
                                {
                                    d = "0"+date.substring(0,1);
                                    month = exp.substring(2,5);
                                    year = exp.substring(7,11);
                                }
                                else
                                {
                                    d = date;
                                    month = exp.substring(3,6);
                                    year = exp.substring(8,12);
                                }
                                String mon="";
                                if(month.equals("Jan"))
                                {
                                    mon="01";
                                }
                                else if(month.equals("Feb"))
                                {
                                    mon="02";
                                }
                                else if(month.equals("Mar"))
                                {
                                    mon="03";
                                }
                                else if(month.equals("Apr"))
                                {
                                    mon="04";
                                }
                                else if(month.equals("May"))
                                {
                                    mon="05";
                                }
                                else if(month.equals("Jun"))
                                {
                                    mon="06";
                                }
                                else if(month.equals("Jul"))
                                {
                                    mon="07";
                                }
                                else if(month.equals("Aug"))
                                {
                                    mon="08";
                                }
                                else if(month.equals("Sep"))
                                {
                                    mon="09";
                                }
                                else if(month.equals("Oct"))
                                {
                                    mon="10";
                                }
                                else if(month.equals("Nov"))
                                {
                                    mon="11";
                                }
                                else if(month.equals("Dec"))
                                {
                                    mon="12";
                                }
                                int y = Integer.parseInt(year);
                                String curdate = java.time.LocalDate.now().toString();
                                String curmonth = curdate.substring(5,7);
                                String curyear = curdate.substring(0,4);
                                int curm = Integer.parseInt(curmonth);
                                int cury = Integer.parseInt(curyear);
                                int m = Integer.parseInt(mon);
                                exp = year+"-"+mon+"-"+d;
                                if(y>cury)
                                {
                                    try
                                    {
                                        Class.forName("java.sql.Driver");
                                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                        Statement stm = conn.createStatement();
                                        String str = "INSERT INTO purchasemaster values('"+p+"','"+ven+"','"+item+"','"+batch+"','"+oqs+"','"+exp+"','"+pur+"');";
                                        stm.executeUpdate(str);
                                        String str1 = "INSERT INTO stockMaster values('"+item+"','"+batch+"','"+oqs+"','"+exp+"');";
                                        stm.executeUpdate(str1);
                                        JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                        btnss.clearSelection();
                                        txtp.setText("");
                                        txtbatch.setText("");
                                        txtoq.setText("");
                                        chexp.setSelected(false);
                                        JTextFieldDateEditor editor = (JTextFieldDateEditor) calpur.getDateEditor();
                                        editor.setBackground(Color.white);
                                        editor.setDisabledTextColor(Color.black);
                                        cbven.setSelectedIndex(0);
                                        cbitem.setSelectedIndex(0);
                                        stm.close();
                                        conn.close();
                                    }
                                    catch(Exception e)
                                    {
                                        JOptionPane.showMessageDialog(null,e);
                                    }
                                }
                                else if(y==cury)
                                {
                                    if(m>curm)
                                    {
                                        try
                                        {
                                            Class.forName("java.sql.Driver");
                                            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                            Statement stm = conn.createStatement();
                                            String str = "INSERT INTO purchasemaster values('"+p+"','"+ven+"','"+item+"','"+batch+"','"+oqs+"','"+exp+"','"+pur+"');";
                                            stm.executeUpdate(str);
                                            String str1 = "INSERT INTO stockMaster values('"+item+"','"+batch+"','"+oqs+"','"+exp+"');";
                                            stm.executeUpdate(str1);
                                            JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                            btnss.clearSelection();
                                            txtp.setText("");
                                            txtbatch.setText("");
                                            txtoq.setText("");
                                            chexp.setSelected(false);
                                            JTextFieldDateEditor editor = (JTextFieldDateEditor) calpur.getDateEditor();
                                            editor.setBackground(Color.white);
                                            editor.setDisabledTextColor(Color.black);
                                            cbven.setSelectedIndex(0);
                                            cbitem.setSelectedIndex(0);
                                            stm.close();
                                            conn.close();
                                        }
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null,e);
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                                }
                            }
                        }
                    }
                }
            }
        }
        else if (rbv.isSelected())
        {
            ven = cbven.getSelectedItem().toString();
            p = "-";
            if(batch.equals("")||oqs.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Fill in the required fields!");
            }
            else
            {
                int oqslength = oqs.length();
                int x,c=0;
                for(x=0;x<oqslength;x++)
                {
                    char a = oqs.charAt(x);
                    if(a<=57&&a>=48)
                    {
                        continue;
                    }
                    else
                    {
                        c++;
                    }
                }
                if(c!=0)
                {
                    JOptionPane.showMessageDialog(null,"Enter numbers in opening quantity!");
                }
                else
                {
                    try
                    {
                        Class.forName("java.sql.Driver");
                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stm = conn.createStatement();
                        String query = "SELECT BATCHNO FROM STOCKMASTER WHERE ITEMNAME ='"+item+"';";
                        ResultSet rs =stm.executeQuery(query);
                        while(rs.next())
                        {
                            String batchno=rs.getString("batchno");
                            if(batchno.equals(batch))
                            {
                                temp=1;
                            }
                        }
                        rs.close();
                        stm.close();
                        conn.close();
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
                    if(temp==1)
                    {
                        JOptionPane.showMessageDialog(null,"Repetition of batch no. is not allowed! Try again.");
                    }
                    else
                    {
                        oq = Integer.parseInt(oqs);
                        if (chexp.isSelected()==false)
                        {
                            exp="-";
                            try
                            {
                                Class.forName("java.sql.Driver");
                                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                Statement stm = conn.createStatement();
                                String str = "INSERT INTO purchasemaster values('"+p+"','"+ven+"','"+item+"','"+batch+"','"+oqs+"','"+exp+"','"+pur+"');";
                                stm.executeUpdate(str);
                                String str1 = "INSERT INTO stockMaster values('"+item+"','"+batch+"','"+oqs+"','"+exp+"');";
                                stm.executeUpdate(str1);
                                JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                btnss.clearSelection();
                                txtp.setText("");
                                txtbatch.setText("");
                                txtoq.setText("");
                                chexp.setSelected(false);
                                JTextFieldDateEditor editor = (JTextFieldDateEditor) calpur.getDateEditor();
                                editor.setBackground(Color.white);
                                editor.setDisabledTextColor(Color.black);
                                cbven.setSelectedIndex(0);
                                cbitem.setSelectedIndex(0);
                                stm.close();
                                conn.close();
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(null,e);
                            }
                        }
                        else
                        {
                            if(calexp.getCalendar()==null)
                            {
                                JOptionPane.showMessageDialog(null,"Select an Expiry Date!");
                            }
                            else
                            {
                                SimpleDateFormat df = new SimpleDateFormat("d MMM, yyyy");
                                exp = df.format(calexp.getDate());
                                String date = exp.substring(0,2);
                                String d,month,year;
                                if(date.substring(1,2).equals(" "))
                                {
                                    d = "0"+date.substring(0,1);
                                    month = exp.substring(2,5);
                                    year = exp.substring(7,11);
                                }
                                else
                                {
                                    d = date;
                                    month = exp.substring(3,6);
                                    year = exp.substring(8,12);
                                }
                                String mon="";
                                if(month.equals("Jan"))
                                {
                                    mon="01";
                                }
                                else if(month.equals("Feb"))
                                {
                                    mon="02";
                                }
                                else if(month.equals("Mar"))
                                {
                                    mon="03";
                                }
                                else if(month.equals("Apr"))
                                {
                                    mon="04";
                                }
                                else if(month.equals("May"))
                                {
                                    mon="05";
                                }
                                else if(month.equals("Jun"))
                                {
                                    mon="06";
                                }
                                else if(month.equals("Jul"))
                                {
                                    mon="07";
                                }
                                else if(month.equals("Aug"))
                                {
                                    mon="08";
                                }
                                else if(month.equals("Sep"))
                                {
                                    mon="09";
                                }
                                else if(month.equals("Oct"))
                                {
                                    mon="10";
                                }
                                else if(month.equals("Nov"))
                                {
                                    mon="11";
                                }
                                else if(month.equals("Dec"))
                                {
                                    mon="12";
                                }
                                int y = Integer.parseInt(year);
                                String curdate = java.time.LocalDate.now().toString();
                                String curmonth = curdate.substring(5,7);
                                String curyear = curdate.substring(0,4);
                                int curm = Integer.parseInt(curmonth);
                                int cury = Integer.parseInt(curyear);
                                int m = Integer.parseInt(mon);
                                exp = year+"-"+mon+"-"+d;
                                if(y>cury)
                                {
                                    try
                                    {
                                        Class.forName("java.sql.Driver");
                                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                        Statement stm = conn.createStatement();
                                        String str = "INSERT INTO purchasemaster values('"+p+"','"+ven+"','"+item+"','"+batch+"','"+oqs+"','"+exp+"','"+pur+"');";
                                        stm.executeUpdate(str);
                                        String str1 = "INSERT INTO stockMaster values('"+item+"','"+batch+"','"+oqs+"','"+exp+"');";
                                        stm.executeUpdate(str1);
                                        JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                        btnss.clearSelection();
                                        txtp.setText("");
                                        txtbatch.setText("");
                                        txtoq.setText("");
                                        chexp.setSelected(false);
                                        JTextFieldDateEditor editor = (JTextFieldDateEditor) calpur.getDateEditor();
                                        editor.setBackground(Color.white);
                                        editor.setDisabledTextColor(Color.black);
                                        cbven.setSelectedIndex(0);
                                        cbitem.setSelectedIndex(0);
                                        stm.close();
                                        conn.close();
                                    }
                                    catch(Exception e)
                                    {
                                        JOptionPane.showMessageDialog(null,e);
                                    }
                                }
                                else if(y==cury)
                                {
                                    if(m>curm)
                                    {
                                        try
                                        {
                                            Class.forName("java.sql.Driver");
                                            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                            Statement stm = conn.createStatement();
                                            String str = "INSERT INTO purchasemaster values('"+p+"','"+ven+"','"+item+"','"+batch+"','"+oqs+"','"+exp+"','"+pur+"');";
                                            stm.executeUpdate(str);
                                            String str1 = "INSERT INTO stockMaster values('"+item+"','"+batch+"','"+oqs+"','"+exp+"');";
                                            stm.executeUpdate(str1);
                                            JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                            btnss.clearSelection();
                                            txtp.setText("");
                                            txtbatch.setText("");
                                            txtoq.setText("");
                                            chexp.setSelected(false);
                                            JTextFieldDateEditor editor = (JTextFieldDateEditor) calpur.getDateEditor();
                                            editor.setBackground(Color.white);
                                            editor.setDisabledTextColor(Color.black);
                                            cbven.setSelectedIndex(0);
                                            cbitem.setSelectedIndex(0);
                                            stm.close();
                                            conn.close();
                                        }
                                        catch(Exception e)
                                        {
                                            JOptionPane.showMessageDialog(null,e);
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                                }
                            }
                        }
                    }
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a stock supplier!");
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        // TODO add your handling code here:
        btnss.clearSelection();
        txtp.setText("");
        cbven.setSelectedIndex(0);
        cbitem.setSelectedIndex(0);
        cbitem.setEnabled(false);
        txtbatch.setText("");
        txtoq.setText("");
        chexp.setSelected(false);
    }//GEN-LAST:event_btncancelActionPerformed

    private void txtoqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtoqFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtoqFocusGained

    private void txtoqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtoqFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtoqFocusLost

    private void txtoqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtoqKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtoqKeyTyped

    private void chexpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chexpItemStateChanged
        // TODO add your handling code here:
        if(chexp.isSelected()==true)
        {
            calexp.setEnabled(true);
            JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
            editor.setEnabled(false);
            editor.setBackground(Color.white);
            editor.setDisabledTextColor(Color.black);
        }
        if(chexp.isSelected()==false)
        {
            calexp.setEnabled(false);
            JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
            editor.setBackground(Color.white);
            editor.setDisabledTextColor(Color.black);
            calexp.setCalendar(null);
        }
    }//GEN-LAST:event_chexpItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:        
        try
        {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "SELECT itemName from itemMaster order by itemname;";
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String in = rs.getString(1);
                cbitem.addItem(in);
            }
            rs.next();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        try
        {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "SELECT vendorName FROM vendorMaster order by vendorname;";
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String vName = rs.getString(1);
                cbven.addItem(vName);
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        Color c=new Color(140,170,230);
        this.getContentPane().setBackground(c);
        txtp.setDisabledTextColor(Color.black);
        txtp.setBackground(Color.white);
        JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();            
        editor.setBackground(Color.white);
        editor.setDisabledTextColor(Color.black);
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
        editor1.setEnabled(false);
        editor1.setBackground(Color.white);
        editor1.setDisabledTextColor(Color.black);
        String curdate = java.time.LocalDate.now().toString();
        String cm = curdate.substring(5,7);
        String cy = curdate.substring(0,4);
        String cd = curdate.substring(8,10);
        String mon="";
        if(cm.equals("01"))
        {
            mon="Jan";
        }
        else if(cm.equals("02"))
        {
            mon="Feb";
        }
        else if(cm.equals("03"))
        {
            mon="Mar";
        }
        else if(cm.equals("04"))
        {
            mon="Apr";
        }
        else if(cm.equals("05"))
        {
            mon="May";
        }
        else if(cm.equals("06"))
        {
            mon="Jun";
        }
        else if(cm.equals("07"))
        {
            mon="Jul";
        }
        else if(cm.equals("08"))
        {
            mon="Aug";
        }
        else if(cm.equals("09"))
        {
            mon="Sep";
        }
        else if(cm.equals("10"))
        {
            mon="Oct";
        }
        else if(cm.equals("11"))
        {
            mon="Nov";
        }
        else if(cm.equals("12"))
        {
            mon="Dec";
        }
        String date = cd+" "+mon+", "+cy;
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("d MMM, yyyy");
        try
        {
            cal.setTime(sdf.parse(date));
            calpur.setCalendar(cal);
        } 
        catch (ParseException ex) 
        {
            Logger.getLogger(purchaseEntry.class.getName()).log(Level.SEVERE, null, ex);
        }
        calexp.setMinSelectableDate(new Date());
        calpur.setMaxSelectableDate(new Date());
    }//GEN-LAST:event_formWindowOpened

    private void rbpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbpItemStateChanged
        // TODO add your handling code here:
        if(rbp.isSelected())
        {
            if(txtp.getText().equals(""))
            {
                cbitem.setEnabled(false);
            }       
            txtp.setEnabled(true);
            cbven.setEnabled(false);
        }
        else
        {
            txtp.setText("");
            txtp.setEnabled(false);
        }
        if(cbitem.getSelectedIndex()==0||cbven.getSelectedIndex()==0||txtp.getText().equals(""))
        {
            btnsave.setEnabled(false);
        }
        else
        {
            btnsave.setEnabled(true);
        }
    }//GEN-LAST:event_rbpItemStateChanged

    private void rbvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbvItemStateChanged
        // TODO add your handling code here:
        if(rbv.isSelected())
        {
            txtp.setText("");
            txtp.setEnabled(false);
            cbven.setEnabled(true);
            if(cbven.getSelectedIndex()==0)
            {
                cbitem.setEnabled(false);                
            }
            else
            {
                cbitem.setEnabled(true);  
                if(cbitem.getSelectedIndex()==0)
                {
                    btnsave.setEnabled(false);
                }
                else
                {
                    btnsave.setEnabled(true);
                }
            }
        }
        else
        {
            cbven.setEnabled(false);
        }
    }//GEN-LAST:event_rbvItemStateChanged

    private void txtpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyPressed
        // TODO add your handling code here:
        if(txtp.getText().equals(""))
        {
            btnsave.setEnabled(false);
            cbitem.setEnabled(false);
        }
        else
        {
            cbitem.setEnabled(true);
            if(cbitem.getSelectedIndex()==0)
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }            
        }
    }//GEN-LAST:event_txtpKeyPressed

    private void txtpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyReleased
        // TODO add your handling code here:
        if(txtp.getText().equals(""))
        {
            
            btnsave.setEnabled(false);
            cbitem.setEnabled(false);
        }
        else
        {
            cbitem.setEnabled(true);
            if(cbitem.getSelectedIndex()==0)
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }            
        }
    }//GEN-LAST:event_txtpKeyReleased

    private void txtpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyTyped
        // TODO add your handling code here:
        if(txtp.getText().equals(""))
        {
            btnsave.setEnabled(false);
            cbitem.setEnabled(false);
        }
        else
        {
            cbitem.setEnabled(true);
            if(cbitem.getSelectedIndex()==0)
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }            
        }
    }//GEN-LAST:event_txtpKeyTyped

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:            
       
    }//GEN-LAST:event_formWindowActivated

    private void txtbatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbatchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbatchActionPerformed

    private void cbitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbitemActionPerformed
        // TODO add your handling code here:
        if(rbp.isSelected()==false)
        {
            if(cbitem.getSelectedIndex()==0)
        {
            btnsave.setEnabled(false);
        }
        else
        {
            if(cbven.getSelectedIndex()==0)
            {
                btnsave.setEnabled(false);                           
            }
            else
            {
                btnsave.setEnabled(true);
            }           
        }            
        }
        else
        {
            if(txtp.getText().equals(""))
            {
                btnsave.setEnabled(false);
            }
            else
            {
                if(cbitem.getSelectedIndex()==0)
        {
            btnsave.setEnabled(false);
        }
                else
                {
                    btnsave.setEnabled(true);
                }                
            }
        }
    }//GEN-LAST:event_cbitemActionPerformed

    private void cbvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbvenActionPerformed
        // TODO add your handling code here:
        if(rbp.isSelected()==false)
        {
            if(cbven.getSelectedIndex()==0)
        {
            btnsave.setEnabled(false);            
        }
        else
        {
            btnsave.setEnabled(true);
            if(cbitem.getSelectedIndex()==0)
            {
                btnsave.setEnabled(false);                           
            }
            else
            {
                btnsave.setEnabled(true);
            }
        }
        }
        else
        {
            if(txtp.getText().equals(""))
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }
        }
    }//GEN-LAST:event_cbvenActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formPropertyChange

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formFocusGained

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowStateChanged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked

    private void cbvenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbvenItemStateChanged
        // TODO add your handling code here:
        if(cbven.getSelectedIndex()==0)
        {
            cbitem.setEnabled(false);
        }
        else
        {
            cbitem.setEnabled(true);
        }
    }//GEN-LAST:event_cbvenItemStateChanged

    private void cbitemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbitemItemStateChanged
        // TODO add your handling code here:
        if(cbitem.getSelectedIndex()==0)
        {
            btnsave.setEnabled(false);
        }
        else
        {
            btnsave.setEnabled(true);
        }
    }//GEN-LAST:event_cbitemItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(purchaseEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(purchaseEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(purchaseEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(purchaseEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new purchaseEntry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btnsave;
    private javax.swing.ButtonGroup btnss;
    private com.toedter.calendar.JDateChooser calexp;
    private com.toedter.calendar.JDateChooser calpur;
    private javax.swing.JComboBox<String> cbitem;
    private javax.swing.JComboBox<String> cbven;
    private javax.swing.JCheckBox chexp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbp;
    private javax.swing.JRadioButton rbv;
    private javax.swing.JTextField txtbatch;
    private javax.swing.JTextField txtoq;
    private javax.swing.JTextField txtp;
    // End of variables declaration//GEN-END:variables
}
