/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockinventorymanagement;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import com.toedter.calendar.JTextFieldDateEditor;
import java.util.Date;
/**
 *
 * @author Anish
 */
public class exploreStock extends javax.swing.JFrame {

    /**
     * Creates new form search
     */
    public exploreStock() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        cbsrch = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        sep = new javax.swing.JSeparator();
        btnempty = new javax.swing.JButton();
        btnsrch = new javax.swing.JButton();
        scrstock = new javax.swing.JScrollPane();
        tblstock = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtcrit = new javax.swing.JTextField();
        cbcrit = new javax.swing.JComboBox<>();
        cbop = new javax.swing.JComboBox<>();
        pnledit = new javax.swing.JPanel();
        txtexp = new javax.swing.JTextField();
        lblexp = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        rbred = new javax.swing.JRadioButton();
        txtitem = new javax.swing.JTextField();
        rbced = new javax.swing.JRadioButton();
        lblitem = new javax.swing.JLabel();
        lbloq = new javax.swing.JLabel();
        lblbatch = new javax.swing.JLabel();
        txtbatch = new javax.swing.JTextField();
        txtoq = new javax.swing.JTextField();
        btnedit = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Explore Stock Master");
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(900, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 675));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(62, 53, 171));
        jLabel2.setText("Search Field");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 16, -1, -1));

        cbsrch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Field", "itemName", "batchNo", "openQty", "exp" }));
        cbsrch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbsrchItemStateChanged(evt);
            }
        });
        cbsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbsrchActionPerformed(evt);
            }
        });
        getContentPane().add(cbsrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 58, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(62, 53, 171));
        jLabel3.setText("Criteria");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 16, -1, -1));
        getContentPane().add(sep, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 850, -1));

        btnempty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnempty.setText("Empty Table");
        btnempty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnemptyActionPerformed(evt);
            }
        });
        getContentPane().add(btnempty, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 160, -1));

        btnsrch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsrch.setText("Search in the database");
        btnsrch.setEnabled(false);
        btnsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchActionPerformed(evt);
            }
        });
        getContentPane().add(btnsrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 121, 240, -1));

        tblstock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Item Name", "Batch No.", "Opening Qty.", "Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblstock.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrstock.setViewportView(tblstock);

        getContentPane().add(scrstock, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 170, 860, 180));

        jPanel1.setBackground(new java.awt.Color(214, 223, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        txtcrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcritActionPerformed(evt);
            }
        });
        txtcrit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtcritPropertyChange(evt);
            }
        });
        txtcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcritKeyTyped(evt);
            }
        });
        jPanel1.add(txtcrit);

        cbcrit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));
        cbcrit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbcritItemStateChanged(evt);
            }
        });
        cbcrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbcritActionPerformed(evt);
            }
        });
        cbcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbcritKeyTyped(evt);
            }
        });
        jPanel1.add(cbcrit);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 54, 670, -1));

        cbop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<", ">=", "<=", "!=" }));
        getContentPane().add(cbop, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 58, -1, -1));

        pnledit.setBackground(new java.awt.Color(141, 230, 247));
        pnledit.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Stock Master"));

        txtexp.setEditable(false);
        txtexp.setEnabled(false);
        txtexp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtexpActionPerformed(evt);
            }
        });

        lblexp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblexp.setForeground(new java.awt.Color(62, 53, 171));
        lblexp.setText("Expiry Date :");

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setText("Save Changes");
        btnsave.setEnabled(false);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        rbred.setBackground(new java.awt.Color(140, 170, 230));
        bg.add(rbred);
        rbred.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbred.setForeground(new java.awt.Color(62, 53, 171));
        rbred.setText("Remove Expiry Date");
        rbred.setEnabled(false);
        rbred.setOpaque(false);
        rbred.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbredStateChanged(evt);
            }
        });

        txtitem.setEditable(false);
        txtitem.setEnabled(false);

        rbced.setBackground(new java.awt.Color(140, 170, 230));
        bg.add(rbced);
        rbced.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbced.setForeground(new java.awt.Color(62, 53, 171));
        rbced.setText("Change Expiry Date :");
        rbced.setEnabled(false);
        rbced.setOpaque(false);
        rbced.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbcedStateChanged(evt);
            }
        });

        lblitem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblitem.setForeground(new java.awt.Color(62, 53, 171));
        lblitem.setText("Item Name :");

        lbloq.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbloq.setForeground(new java.awt.Color(62, 53, 171));
        lbloq.setText("Opening Qty. :");

        lblbatch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblbatch.setForeground(new java.awt.Color(62, 53, 171));
        lblbatch.setText("Batch No. :");

        txtbatch.setEditable(false);
        txtbatch.setEnabled(false);

        txtoq.setEnabled(false);

        btnedit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnedit.setText("Edit Details");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnleditLayout = new javax.swing.GroupLayout(pnledit);
        pnledit.setLayout(pnleditLayout);
        pnleditLayout.setHorizontalGroup(
            pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnleditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addComponent(btnsave)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnleditLayout.createSequentialGroup()
                                        .addComponent(lblbatch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtbatch, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnleditLayout.createSequentialGroup()
                                        .addComponent(lbloq)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                        .addComponent(txtoq, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbred)
                                    .addGroup(pnleditLayout.createSequentialGroup()
                                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblexp)
                                            .addComponent(rbced))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                        .addComponent(txtexp, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addComponent(lblitem)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(19, 19, 19))))
            .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnleditLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(683, Short.MAX_VALUE)))
        );
        pnleditLayout.setVerticalGroup(
            pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnleditLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblitem)
                                .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblexp))
                            .addComponent(txtexp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(rbred))
                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtbatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblbatch)))
                .addGap(20, 20, 20)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbced)
                    .addComponent(txtoq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbloq))
                .addGap(18, 18, 18)
                .addComponent(btnsave)
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnleditLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(btnedit)
                    .addContainerGap(198, Short.MAX_VALUE)))
        );

        getContentPane().add(pnledit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 860, 270));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 102, 860, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nisarg900.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnemptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnemptyActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblstock.getModel();
        int rows = model.getRowCount();
        //Now remove all the rows from the current table model
        if (rows>0)
        {
            for(int i = 0; i<rows;i++)
            {
                model.removeRow(0);
            }
        }
    }//GEN-LAST:event_btnemptyActionPerformed

    private void btnsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchActionPerformed
        // TODO add your handling code here:
        btnempty.doClick();
        DefaultTableModel model = (DefaultTableModel) tblstock.getModel();
        int x,c=0;
        String qty=txtcrit.getText();
        int qtylength = qty.length();
        for(x=0;x<qtylength;x++)
        {
            char a = qty.charAt(x);
            if(a<=57&&a>=48)
            {
                continue;
            }
            else
            {
                c++;
            }
        }                        
        if(c!=0)
        {
            JOptionPane.showMessageDialog(null,"Enter numbers to search for Quantities!");
        }
        else
        {
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String sfld = (String) cbsrch.getSelectedItem();
                String crit,query;
                if(sfld.equals("exp"))
                {
                    SimpleDateFormat dcn = new SimpleDateFormat("d MMM, yyyy");
                    crit = dcn.format(calcrit.getDate());
                    String date = crit.substring(0,2);
                    String d,month,year;
                    if(date.substring(1,2).equals(" "))
                    {
                        d = "0"+date.substring(0,1);
                        month = crit.substring(2,5);
                        year = crit.substring(7,11);
                    }
                    else
                    {
                        d = date;
                        month = crit.substring(3,6);
                        year = crit.substring(8,12);
                    }
                    String mon="";
                    if(month.equals("Jan"))
                    {
                        mon="01";
                    }
                    else if(month.equals("Feb"))
                    {
                        mon="02";
                    }
                    else if(month.equals("Mar"))
                    {
                        mon="03";
                    }
                    else if(month.equals("Apr"))
                    {
                        mon="04";
                    }
                    else if(month.equals("May"))
                    {
                        mon="05";
                    }
                    else if(month.equals("Jun"))
                    {
                        mon="06";
                    }
                    else if(month.equals("Jul"))
                    {
                        mon="07";
                    }
                    else if(month.equals("Aug"))
                    {
                        mon="08";
                    }
                    else if(month.equals("Sep"))
                    {
                        mon="09";
                    }
                    else if(month.equals("Oct"))
                    {
                        mon="10";
                    }
                    else if(month.equals("Nov"))
                    {
                        mon="11";
                    }
                    else if(month.equals("Dec"))
                    {
                        mon="12";
                    }
                    int y = Integer.parseInt(year);
                    String curdate = java.time.LocalDate.now().toString();
                    String curmonth = curdate.substring(5,7);
                    String curyear = curdate.substring(0,4);
                    int curm = Integer.parseInt(curmonth);
                    int cury = Integer.parseInt(curyear);
                    int m = Integer.parseInt(mon);
                    crit = year+"-"+mon+"-"+d;
                    query = "select * from stockmaster where exp like '"+crit+"' order by exp;";
                }
                else if(sfld.equals("itemName")||sfld.equals("batchNo"))
                {
                    crit = (String) cbcrit.getSelectedItem();
                    query = "select * from stockmaster where "+sfld+" = '"+crit+"' order by exp;";
                }
                else
                {
                    crit = txtcrit.getText();
                    String crit1 = (String) cbop.getSelectedItem();
                    query = "select * from stockmaster where "+sfld+crit1+crit+" order by exp;";
                }
                ResultSet rs = stmt.executeQuery(query);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String oq = rs.getString("openqty");            
                    String exp = rs.getString("exp");
                    String date;
                    if(exp.equals("-"))
                    {
                      date = "-";  
                    }
                    else
                    {
                        String cm = exp.substring(5,7);
                        String cy = exp.substring(0,4);
                        String cd = exp.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        date = cd+" "+mon+", "+cy;
                    }
                    model.addRow(new Object[] {r,itemname,batchno,oq,date});
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnsrchActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "select * from login";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            String user = rs.getString("username");            
            if(user.equals("Admin"))
            {
                String q = "select*from access;";
                ResultSet rs1 = stmt.executeQuery(q);
                while(rs1.next())
                {
                    String f = rs1.getString("feature");                    
                    if(f.equals("edit"))
                    {                        
                        pnledit.setVisible(true);                        
                    }
                    else
                    {
                        sep.setVisible(false);
                        pnledit.setVisible(false);
                        this.setSize(900,400);
                    }
                }
                rs1.close();
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        Color s=new Color(214,223,245);
        scrstock.getViewport().setBackground(s);
        txtcrit.setVisible(false);
        calcrit.setVisible(false);
        cbop.setVisible(false);
        cbcrit.setVisible(false);
        calexp.setMinSelectableDate(new Date());
        calcrit.setMinSelectableDate(new Date());
        txtitem.setDisabledTextColor(Color.black);
        txtitem.setBackground(Color.white);
        txtbatch.setDisabledTextColor(Color.black);
        txtbatch.setBackground(Color.white);
        txtoq.setDisabledTextColor(Color.black);
        txtoq.setBackground(Color.white);
        txtexp.setDisabledTextColor(Color.black);
        txtexp.setBackground(Color.white);
    }//GEN-LAST:event_formWindowOpened

    private void cbsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbsrchActionPerformed
        // TODO add your handling code here:
        String sfld = (String) cbsrch.getSelectedItem();
        if(sfld.equals("Select Field"))
        {
            btnsrch.setEnabled(false);            
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.setVisible(false);
            DefaultTableModel model = (DefaultTableModel) tblstock.getModel();
            while (model.getRowCount()>0)
            model.removeRow(0);
        }
        else if(sfld.equals("exp"))
        {            
            String date=((JTextField)calcrit.getDateEditor().getUiComponent()).getText() + "";
            if(date.equals(""))
            {
                btnsrch.setEnabled(false);
            }
            else
            {
                btnsrch.setEnabled(true);        
            }
            calcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            cbcrit.setVisible(false);
            cbop.setVisible(false);            
        }
        else if(sfld.equals("itemName"))
        {                     
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();            
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select itemName from itemmaster ORDER BY ITEMNAME;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String itemName = rs.getString("itemName");                    
                    cbcrit.addItem(itemName);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
            
        }
        else if(sfld.equals("openQty"))
        {        
            btnsrch.setEnabled(false);
            calcrit.setVisible(false);
            cbop.setVisible(true);
            cbop.setSelectedIndex(0);            
            txtcrit.setVisible(true);
            txtcrit.setText("");
            cbcrit.setVisible(false);            
        }
        else if(sfld.equals("batchNo"))
        {        
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select distinct batchNo from stockmaster;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String batchNo = rs.getString("batchNo");
                    cbcrit.addItem(batchNo);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }            
        }
    }//GEN-LAST:event_cbsrchActionPerformed

    private void cbsrchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbsrchItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbsrchItemStateChanged

    private void cbcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbcritKeyTyped

    private void cbcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbcritKeyReleased

    private void cbcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbcritKeyPressed

    private void txtcritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcritActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtcritActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowActivated

    private void txtcritPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtcritPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtcritPropertyChange

    private void calcritPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calcritPropertyChange
        // TODO add your handling code here:
        if(calcrit.getCalendar()==null)
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_calcritPropertyChange

    private void calcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calcritKeyPressed

    private void calcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calcritKeyReleased

    private void calcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calcritKeyTyped

    private void calcritInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_calcritInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calcritInputMethodTextChanged

    private void txtcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyPressed
        // TODO add your handling code here:
        String crit=txtcrit.getText();
            if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
            else
            {
                btnsrch.setEnabled(true);        
            }
    }//GEN-LAST:event_txtcritKeyPressed

    private void txtcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyTyped
        // TODO add your handling code here:
        String crit=txtcrit.getText();
            if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
            else
            {
                btnsrch.setEnabled(true);        
            }
    }//GEN-LAST:event_txtcritKeyTyped

    private void txtcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyReleased
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);        
        }
    }//GEN-LAST:event_txtcritKeyReleased

    private void cbcritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbcritActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbcritActionPerformed

    private void cbcritItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbcritItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbcritItemStateChanged

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowIconified

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String batch = txtbatch.getText();
        String oq = txtoq.getText();
        String exp;
        if(batch.equals("")||oq.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Fill in the required fields!");
        }
        else
        {
            int oqlength = oq.length();
            int x,c=0;
            for(x=0;x<oqlength;x++)
            {
                char a = oq.charAt(x);
                if(a<=57&&a>=48)
                {
                    continue;
                }
                else
                {
                    c++;
                }
            }
            if(c!=0)
            {
                JOptionPane.showMessageDialog(null,"Enter numbers in opening quantity!");
            }
            else
            {
                if(rbred.isSelected()==false&&rbced.isSelected()==false)
                {
                    exp = txtexp.getText();
                    if(exp.compareTo("-")!=0)
                    {
                        String date = exp.substring(0,2);
                        String d,month,year;
                        if(date.substring(1,2).equals(" "))
                        {
                            d = "0"+date.substring(0,1);
                            month = exp.substring(2,5);
                            year = exp.substring(7,11);
                        }
                        else
                        {
                            d = date;
                            month = exp.substring(3,6);
                            year = exp.substring(8,12);
                        }
                        String mon="";
                        if(month.equals("Jan"))
                        {
                            mon="01";
                        }
                        else if(month.equals("Feb"))
                        {
                            mon="02";
                        }
                        else if(month.equals("Mar"))
                        {
                            mon="03";
                        }
                        else if(month.equals("Apr"))
                        {
                            mon="04";
                        }
                        else if(month.equals("May"))
                        {
                            mon="05";
                        }
                        else if(month.equals("Jun"))
                        {
                            mon="06";
                        }
                        else if(month.equals("Jul"))
                        {
                            mon="07";
                        }
                        else if(month.equals("Aug"))
                        {
                            mon="08";
                        }
                        else if(month.equals("Sep"))
                        {
                            mon="09";
                        }
                        else if(month.equals("Oct"))
                        {
                            mon="10";
                        }
                        else if(month.equals("Nov"))
                        {
                            mon="11";
                        }
                        else if(month.equals("Dec"))
                        {
                            mon="12";
                        }
                        exp = year+"-"+mon+"-"+d;
                    }
                    try
                    {
                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement();
                        String itemName = txtitem.getText();
                        String upd = "update stockmaster set batchno = '"+batch+"', openqty = '"+oq+"',exp='"+exp+"' where itemname ='"+itemName+"' and batchno='"+batch+"';";
                        stmt.executeUpdate(upd);
                        btnsrch.doClick();
                        txtitem.setText("");
                        txtbatch.setText("");
                        txtoq.setText("");
                        txtexp.setText("");
                        calexp.setCalendar(null);
                        rbred.setSelected(false);
                        rbced.setSelected(false);
                        rbced.setEnabled(false);
                        calexp.setEnabled(false);
                        btnsave.setEnabled(false);
                        txtbatch.setEnabled(false);
                        txtitem.setEnabled(false);
                        txtoq.setEnabled(false);
                        txtexp.setEnabled(false);
                        calexp.setEnabled(false);
                        rbced.setEnabled(false);
                        rbred.setEnabled(false);
                        JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                        editor.setBackground(Color.white);
                        editor.setDisabledTextColor(Color.black);
                        JOptionPane.showMessageDialog(null,"Record Updated successfully.");
                        stmt.close();
                        con.close();
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
                }
                else if(rbred.isSelected())
                {
                    exp = "-";
                    try
                    {
                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement();
                        String itemName = txtitem.getText();
                        String upd = "update stockmaster set batchno = '"+batch+"', openqty = '"+oq+"',exp='"+exp+"' where itemname ='"+itemName+"' and batchno='"+batch+"';";
                        stmt.executeUpdate(upd);
                        btnsrch.doClick();
                        txtitem.setText("");
                        txtbatch.setText("");
                        txtoq.setText("");
                        txtexp.setText("");
                        calexp.setCalendar(null);
                        rbced.setEnabled(false);
                        calexp.setEnabled(false);
                        btnsave.setEnabled(false);
                        txtbatch.setEnabled(false);
                        txtitem.setEnabled(false);
                        txtoq.setEnabled(false);
                        txtexp.setEnabled(false);
                        calexp.setEnabled(false);
                        rbced.setEnabled(false);
                        rbred.setEnabled(false);
                        bg.clearSelection();
                        JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                        editor.setBackground(Color.white);
                        editor.setDisabledTextColor(Color.black);
                        JOptionPane.showMessageDialog(null,"Record Updated successfully.");
                        stmt.close();
                        con.close();
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
                }
                else if(rbced.isSelected())
                {
                    if(calexp.getCalendar()==null)
                    {
                        JOptionPane.showMessageDialog(null,"Select a Date!");
                    }
                    else
                    {
                        SimpleDateFormat dcn = new SimpleDateFormat("d MMM, yyyy");
                        exp = dcn.format(calexp.getDate());
                        String date = exp.substring(0,2);
                        String d,month,year;
                        if(date.substring(1,2).equals(" "))
                        {
                            d = "0"+date.substring(0,1);
                            month = exp.substring(2,5);
                            year = exp.substring(7,11);
                        }
                        else
                        {
                            d = date;
                            month = exp.substring(3,6);
                            year = exp.substring(8,12);
                        }
                        String mon="";
                        if(month.equals("Jan"))
                        {
                            mon="01";
                        }
                        else if(month.equals("Feb"))
                        {
                            mon="02";
                        }
                        else if(month.equals("Mar"))
                        {
                            mon="03";
                        }
                        else if(month.equals("Apr"))
                        {
                            mon="04";
                        }
                        else if(month.equals("May"))
                        {
                            mon="05";
                        }
                        else if(month.equals("Jun"))
                        {
                            mon="06";
                        }
                        else if(month.equals("Jul"))
                        {
                            mon="07";
                        }
                        else if(month.equals("Aug"))
                        {
                            mon="08";
                        }
                        else if(month.equals("Sep"))
                        {
                            mon="09";
                        }
                        else if(month.equals("Oct"))
                        {
                            mon="10";
                        }
                        else if(month.equals("Nov"))
                        {
                            mon="11";
                        }
                        else if(month.equals("Dec"))
                        {
                            mon="12";
                        }
                        int y = Integer.parseInt(year);
                        String curdate = java.time.LocalDate.now().toString();
                        String curmonth = curdate.substring(5,7);
                        String curyear = curdate.substring(0,4);
                        int curm = Integer.parseInt(curmonth);
                        int cury = Integer.parseInt(curyear);
                        String date1 = year+"-"+mon+"-"+d;
                        int im = Integer.parseInt(mon);
                        if(y>cury)
                        {
                            try
                            {
                                Class.forName("java.sql.Driver");
                                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                Statement stmt = con.createStatement();
                                String itemName = txtitem.getText();
                                String upd = "update stockmaster set batchno = '"+batch+"', openqty = '"+oq+"',exp='"+date1+"' where itemname ='"+itemName+"' and batchno='"+batch+"';";
                                stmt.executeUpdate(upd);
                                btnsrch.doClick();
                                txtitem.setText("");
                                txtbatch.setText("");
                                txtoq.setText("");
                                txtexp.setText("");
                                calexp.setCalendar(null);
                                bg.clearSelection();
                                calexp.setEnabled(false);
                                btnsave.setEnabled(false);
                                txtbatch.setEnabled(false);
                                txtitem.setEnabled(false);
                                txtoq.setEnabled(false);
                                txtexp.setEnabled(false);
                                calexp.setEnabled(false);
                                rbced.setEnabled(false);
                                rbred.setEnabled(false);
                                JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                editor.setBackground(Color.white);
                                editor.setDisabledTextColor(Color.black);
                                JOptionPane.showMessageDialog(null,"Record Updated successfully.");
                                stmt.close();
                                con.close();
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(null,e);
                            }
                        }
                        else if(y==cury)
                        {
                            if(im>curm)
                            {
                                try
                                {
                                    Class.forName("java.sql.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                    Statement stmt = con.createStatement();
                                    String itemName = txtitem.getText();
                                    String upd = "update stockmaster set batchno = '"+batch+"', openqty = '"+oq+"',exp='"+date1+"' where itemname ='"+itemName+"' and batchno='"+batch+"';";
                                    stmt.executeUpdate(upd);
                                    btnsrch.doClick();
                                    txtitem.setText("");
                                    txtbatch.setText("");
                                    txtoq.setText("");
                                    txtexp.setText("");
                                    bg.clearSelection();
                                    rbced.setEnabled(false);
                                    calexp.setEnabled(false);
                                    calexp.setCalendar(null);
                                    btnsave.setEnabled(false);
                                    txtbatch.setEnabled(false);
                                    txtitem.setEnabled(false);
                                    txtoq.setEnabled(false);
                                    txtexp.setEnabled(false);
                                    calexp.setEnabled(false);
                                    rbred.setEnabled(false);
                                    JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                    editor.setBackground(Color.white);
                                    editor.setDisabledTextColor(Color.black);
                                    JOptionPane.showMessageDialog(null,"Record Updated successfully.");
                                    stmt.close();
                                    con.close();
                                }
                                catch(Exception e)
                                {
                                    JOptionPane.showMessageDialog(null,e);
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void rbredStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbredStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rbredStateChanged

    private void rbcedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbcedStateChanged
        // TODO add your handling code here:
        if(rbced.isSelected())
        {
            calexp.setEnabled(true);
        }
        else
        {
            calexp.setEnabled(false);
        }
    }//GEN-LAST:event_rbcedStateChanged

    private void calexpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_calexpFocusGained

    }//GEN-LAST:event_calexpFocusGained

    private void calexpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calexpMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_calexpMouseClicked

    private void calexpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calexpMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_calexpMousePressed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        if(tblstock.getSelectionModel().isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the Table to Edit.");
        }
        else
        {
            try
            {
                btnsave.setEnabled(true);
                txtbatch.setEnabled(true);
                txtitem.setEnabled(true);
                txtoq.setEnabled(true);
                txtexp.setEnabled(true);
                rbred.setEnabled(true);
                rbced.setEnabled(true);
                DefaultTableModel model=(DefaultTableModel) tblstock.getModel();
                int i = tblstock.getSelectedRow();
                txtitem.setText(model.getValueAt(i,1).toString());
                txtbatch.setText(model.getValueAt(i,2).toString());
                txtoq.setText(model.getValueAt(i,3).toString());
                String cal=model.getValueAt(i,4).toString();
                txtexp.setText(cal);
                if(cal.compareTo("-")!=0)
                {
                    Date date=(Date) new SimpleDateFormat("d MMM, yyyy").parse(cal);
                    calexp.setDate(date);
                }
                else
                {
                    calexp.setDate(null);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }

    }//GEN-LAST:event_btneditActionPerformed

    private void txtexpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtexpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtexpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exploreStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exploreStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exploreStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exploreStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new exploreStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnempty;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsrch;
    private javax.swing.JComboBox<String> cbcrit;
    private javax.swing.JComboBox<String> cbop;
    private javax.swing.JComboBox<String> cbsrch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblbatch;
    private javax.swing.JLabel lblexp;
    private javax.swing.JLabel lblitem;
    private javax.swing.JLabel lbloq;
    private javax.swing.JPanel pnledit;
    private javax.swing.JRadioButton rbced;
    private javax.swing.JRadioButton rbred;
    private javax.swing.JScrollPane scrstock;
    private javax.swing.JSeparator sep;
    private javax.swing.JTable tblstock;
    private javax.swing.JTextField txtbatch;
    private javax.swing.JTextField txtcrit;
    private javax.swing.JTextField txtexp;
    private javax.swing.JTextField txtitem;
    private javax.swing.JTextField txtoq;
    // End of variables declaration//GEN-END:variables
}
