/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package stockinventorymanagement;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anish
 */
public class explorePurchase extends javax.swing.JFrame {

    /** Creates new form handlePurchase */
    public explorePurchase() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.ButtonGroup();
        btnss = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        btnempty = new javax.swing.JButton();
        btnsrch = new javax.swing.JButton();
        scrpurchase = new javax.swing.JScrollPane();
        tblpurchase = new javax.swing.JTable();
        pnledit = new javax.swing.JPanel();
        calexp = new com.toedter.calendar.JDateChooser();
        btnedit = new javax.swing.JButton();
        txtexp = new javax.swing.JTextField();
        lblexp = new javax.swing.JLabel();
        rbred = new javax.swing.JRadioButton();
        rbced = new javax.swing.JRadioButton();
        btnsave = new javax.swing.JButton();
        txtitem = new javax.swing.JTextField();
        lblitem = new javax.swing.JLabel();
        lbloq = new javax.swing.JLabel();
        lblbatch = new javax.swing.JLabel();
        txtbatch = new javax.swing.JTextField();
        txtoq = new javax.swing.JTextField();
        txtp = new javax.swing.JTextField();
        cbven = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtpur = new javax.swing.JTextField();
        calpur = new com.toedter.calendar.JDateChooser();
        rbp = new javax.swing.JRadioButton();
        rbv = new javax.swing.JRadioButton();
        chkcpd = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        txtcrit = new javax.swing.JTextField();
        calcrit = new com.toedter.calendar.JDateChooser();
        cbcrit = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbsrch = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbop = new javax.swing.JComboBox<>();
        sep = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Explore Purchase Master ");
        setMinimumSize(new java.awt.Dimension(1200, 900));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 900));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 116, 1170, 10));

        btnempty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnempty.setText("Empty Table");
        btnempty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnemptyActionPerformed(evt);
            }
        });
        getContentPane().add(btnempty, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 135, -1, -1));

        btnsrch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsrch.setText("Search in the database");
        btnsrch.setEnabled(false);
        btnsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchActionPerformed(evt);
            }
        });
        getContentPane().add(btnsrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 135, -1, -1));

        tblpurchase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Patient Name", "Vendor Name", "Item Name", "Batch No.", "Opening Qty.", "Expiry Date", "Purchase Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblpurchase.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrpurchase.setViewportView(tblpurchase);

        getContentPane().add(scrpurchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 192, 1160, 270));

        pnledit.setBackground(new java.awt.Color(141, 230, 247));
        pnledit.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Purchase Master"));
        pnledit.setToolTipText("");

        calexp.setEnabled(false);
        calexp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                calexpFocusGained(evt);
            }
        });
        calexp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calexpMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                calexpMousePressed(evt);
            }
        });

        btnedit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnedit.setText("Edit Details");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        txtexp.setEditable(false);
        txtexp.setEnabled(false);

        lblexp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblexp.setForeground(new java.awt.Color(62, 53, 171));
        lblexp.setText("Expiry Date :");

        rbred.setBackground(new java.awt.Color(140, 170, 230));
        bg.add(rbred);
        rbred.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbred.setForeground(new java.awt.Color(62, 53, 171));
        rbred.setText("Remove Expiry Date");
        rbred.setEnabled(false);
        rbred.setOpaque(false);
        rbred.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbredStateChanged(evt);
            }
        });

        rbced.setBackground(new java.awt.Color(140, 170, 230));
        bg.add(rbced);
        rbced.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbced.setForeground(new java.awt.Color(62, 53, 171));
        rbced.setText("Change Expiry Date :");
        rbced.setEnabled(false);
        rbced.setOpaque(false);
        rbced.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbcedItemStateChanged(evt);
            }
        });
        rbced.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbcedStateChanged(evt);
            }
        });

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setText("Save Changes");
        btnsave.setEnabled(false);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        txtitem.setEditable(false);
        txtitem.setEnabled(false);

        lblitem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblitem.setForeground(new java.awt.Color(62, 53, 171));
        lblitem.setText("Item Name :");

        lbloq.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbloq.setForeground(new java.awt.Color(62, 53, 171));
        lbloq.setText("Opening Qty. :");

        lblbatch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblbatch.setForeground(new java.awt.Color(62, 53, 171));
        lblbatch.setText("Batch No. :");

        txtbatch.setEditable(false);
        txtbatch.setEnabled(false);

        txtoq.setEnabled(false);

        txtp.setEnabled(false);
        txtp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpKeyTyped(evt);
            }
        });

        cbven.setEnabled(false);
        cbven.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbvenItemStateChanged(evt);
            }
        });
        cbven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbvenActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(62, 53, 171));
        jLabel1.setText("Purchase Date :");

        txtpur.setEditable(false);
        txtpur.setEnabled(false);

        calpur.setEnabled(false);

        btnss.add(rbp);
        rbp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbp.setForeground(new java.awt.Color(62, 53, 171));
        rbp.setText("Patient Name :");
        rbp.setEnabled(false);
        rbp.setOpaque(false);
        rbp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbpItemStateChanged(evt);
            }
        });
        rbp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbpStateChanged(evt);
            }
        });
        rbp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbpActionPerformed(evt);
            }
        });

        btnss.add(rbv);
        rbv.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbv.setForeground(new java.awt.Color(62, 53, 171));
        rbv.setText("Vendor Name :");
        rbv.setEnabled(false);
        rbv.setOpaque(false);
        rbv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbvItemStateChanged(evt);
            }
        });
        rbv.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbvStateChanged(evt);
            }
        });

        chkcpd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chkcpd.setForeground(new java.awt.Color(62, 53, 171));
        chkcpd.setText("Change Purchase Date :");
        chkcpd.setEnabled(false);
        chkcpd.setOpaque(false);
        chkcpd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkcpdItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnleditLayout = new javax.swing.GroupLayout(pnledit);
        pnledit.setLayout(pnleditLayout);
        pnleditLayout.setHorizontalGroup(
            pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnleditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbloq)
                                    .addComponent(lblbatch))
                                .addGap(61, 61, 61)
                                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtoq, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtbatch, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cbven, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnleditLayout.createSequentialGroup()
                                    .addComponent(lblitem)
                                    .addGap(77, 77, 77)
                                    .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtp, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnsave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 388, Short.MAX_VALUE)
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(chkcpd)
                            .addComponent(rbced)
                            .addComponent(rbred)
                            .addComponent(lblexp))
                        .addGap(18, 18, 18)
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtexp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calexp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calpur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
        );
        pnleditLayout.setVerticalGroup(
            pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnleditLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnedit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addComponent(lblexp)
                        .addGap(18, 18, 18)
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbv))
                        .addGap(23, 23, 23)
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblitem)))
                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbp)
                        .addComponent(txtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addComponent(txtexp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(calexp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnleditLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(rbred)
                                .addGap(18, 18, 18)
                                .addComponent(rbced)))))
                .addGap(17, 17, 17)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnleditLayout.createSequentialGroup()
                        .addComponent(txtpur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblbatch)
                        .addComponent(txtbatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calpur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnleditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtoq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkcpd)
                        .addComponent(lbloq)))
                .addGap(18, 18, 18)
                .addComponent(btnsave)
                .addGap(38, 38, 38))
        );

        getContentPane().add(pnledit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 1160, 360));

        jPanel1.setBackground(new java.awt.Color(214, 223, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        txtcrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcritActionPerformed(evt);
            }
        });
        txtcrit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtcritPropertyChange(evt);
            }
        });
        txtcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcritKeyTyped(evt);
            }
        });
        jPanel1.add(txtcrit);

        calcrit.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                calcritInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        calcrit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calcritPropertyChange(evt);
            }
        });
        calcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                calcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                calcritKeyTyped(evt);
            }
        });
        jPanel1.add(calcrit);

        cbcrit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));
        cbcrit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbcritItemStateChanged(evt);
            }
        });
        cbcrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbcritActionPerformed(evt);
            }
        });
        cbcrit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbcritKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbcritKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbcritKeyTyped(evt);
            }
        });
        jPanel1.add(cbcrit);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 62, 910, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(62, 53, 171));
        jLabel2.setText("Search Field");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        cbsrch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Field", "patientName", "vendorName", "itemName", "batchNo", "openQty", "exp", "pur" }));
        cbsrch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbsrchItemStateChanged(evt);
            }
        });
        cbsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbsrchActionPerformed(evt);
            }
        });
        getContentPane().add(cbsrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 66, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(62, 53, 171));
        jLabel3.setText("Criteria");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, -1));

        cbop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<", ">=", "<=", "!=" }));
        getContentPane().add(cbop, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 66, -1, -1));
        getContentPane().add(sep, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 1170, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nisarg1200.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 900));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnemptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnemptyActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblpurchase.getModel();
        int rows = model.getRowCount();
        //Now remove all the rows from the current table model
        if (rows>0)
        {
            for(int i = 0; i<rows;i++)
            {
                model.removeRow(0);
            }
        }
    }//GEN-LAST:event_btnemptyActionPerformed

    private void btnsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchActionPerformed
        // TODO add your handling code here:
        btnempty.doClick();
        DefaultTableModel model = (DefaultTableModel) tblpurchase.getModel();
        String expdate, purdate, date;
        int x,c=0;
        String qty=txtcrit.getText();
        int qtylength = qty.length();
        for(x=0;x<qtylength;x++)
        {
            char a = qty.charAt(x);
            if(a<=57&&a>=48)
            {
                continue;
            }
            else
            {
                c++;
            }
        }                        
        if(c!=0)
        {
            JOptionPane.showMessageDialog(null,"Enter numbers to search for Quantities!");
        }
        else
        {
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String sfld = (String) cbsrch.getSelectedItem();
                String crit,query="";
                if(sfld.equals("exp")||sfld.equals("pur"))
                {
                    SimpleDateFormat dcn = new SimpleDateFormat("d MMM, yyyy");
                    crit = dcn.format(calcrit.getDate());
                    date = crit.substring(0,2);
                    String d,month,year;
                    if(date.substring(1,2).equals(" "))
                    {
                        d = "0"+date.substring(0,1);
                        month = crit.substring(2,5);
                        year = crit.substring(7,11);
                    }
                    else
                    {
                        d = date;
                        month = crit.substring(3,6);
                        year = crit.substring(8,12);
                    }
                    String mon="";
                    if(month.equals("Jan"))
                    {
                        mon="01";
                    }
                    else if(month.equals("Feb"))
                    {
                        mon="02";
                    }
                    else if(month.equals("Mar"))
                    {
                        mon="03";
                    }
                    else if(month.equals("Apr"))
                    {
                        mon="04";
                    }
                    else if(month.equals("May"))
                    {
                        mon="05";
                    }
                    else if(month.equals("Jun"))
                    {
                        mon="06";
                    }
                    else if(month.equals("Jul"))
                    {
                        mon="07";
                    }
                    else if(month.equals("Aug"))
                    {
                        mon="08";
                    }
                    else if(month.equals("Sep"))
                    {
                        mon="09";
                    }
                    else if(month.equals("Oct"))
                    {
                        mon="10";
                    }
                    else if(month.equals("Nov"))
                    {
                        mon="11";
                    }
                    else if(month.equals("Dec"))
                    {
                        mon="12";
                    }
                    int y = Integer.parseInt(year);
                    String curdate = java.time.LocalDate.now().toString();
                    String curmonth = curdate.substring(5,7);
                    String curyear = curdate.substring(0,4);
                    int curm = Integer.parseInt(curmonth);
                    int cury = Integer.parseInt(curyear);
                    int m = Integer.parseInt(mon);
                    crit = year+"-"+mon+"-"+d;
                    query = "select * from purchasemaster where "+sfld+" = '"+crit+"' order by exp;";
                }
                else if(sfld.equals("patientName")||sfld.equals("vendorName")||sfld.equals("itemName")||sfld.equals("batchNo"))
                {
                    crit = (String) cbcrit.getSelectedItem();
                    query = "select * from purchasemaster where "+sfld+" = '"+crit+"' order by exp;";
                }
                else
                {
                    crit = txtcrit.getText();
                    String crit1 = (String) cbop.getSelectedItem();
                    query = "select * from purchasemaster where "+sfld+crit1+crit+" order by exp;";
                }
                ResultSet rs = stmt.executeQuery(query);
                for(int r = 1;rs.next();r++)
                {
                    String patientname = rs.getString("patientname");
                    String vendorname = rs.getString("vendorname");
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String oq = rs.getString("openqty");
                    String exp = rs.getString("exp");
                    String pur = rs.getString("pur");
                    if(exp.equals("-"))
                    {
                        expdate = "-";  
                    }
                    else
                    {
                        String cm = exp.substring(5,7);
                        String cy = exp.substring(0,4);
                        String cd = exp.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        expdate = cd+" "+mon+", "+cy;
                    }
                    String cm = pur.substring(5,7);
                    String cy = pur.substring(0,4);
                    String cd = pur.substring(8,10);
                    String mon="";
                    if(cm.equals("01"))
                    {
                        mon="Jan";
                    }
                    else if(cm.equals("02"))
                    {
                        mon="Feb";
                    }
                    else if(cm.equals("03"))
                    {
                        mon="Mar";
                    }
                    else if(cm.equals("04"))
                    {
                        mon="Apr";
                    }
                    else if(cm.equals("05"))
                    {
                        mon="May";
                    }
                    else if(cm.equals("06"))
                    {
                        mon="Jun";
                    }
                    else if(cm.equals("07"))
                    {
                        mon="Jul";
                    }
                    else if(cm.equals("08"))
                    {
                        mon="Aug";
                    }
                    else if(cm.equals("09"))
                    {
                        mon="Sep";
                    }
                    else if(cm.equals("10"))
                    {
                        mon="Oct";
                    }
                    else if(cm.equals("11"))
                    {
                        mon="Nov";
                    }
                    else if(cm.equals("12"))
                    {
                        mon="Dec";
                    }
                    purdate = cd+" "+mon+", "+cy;
                    model.addRow(new Object[] {r,patientname,vendorname,itemname,batchno,oq,expdate,purdate});
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnsrchActionPerformed

    private void txtcritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcritActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtcritActionPerformed

    private void txtcritPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtcritPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_txtcritPropertyChange

    private void txtcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyPressed
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_txtcritKeyPressed

    private void txtcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyReleased
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_txtcritKeyReleased

    private void txtcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcritKeyTyped
        // TODO add your handling code here:
        String crit=txtcrit.getText();
        if(crit.equals(""))
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_txtcritKeyTyped

    private void calcritInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_calcritInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritInputMethodTextChanged

    private void calcritPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calcritPropertyChange
        // TODO add your handling code here:
        if(calcrit.getCalendar()==null)
        {
            btnsrch.setEnabled(false);
        }
        else
        {
            btnsrch.setEnabled(true);
        }
    }//GEN-LAST:event_calcritPropertyChange

    private void calcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritKeyPressed

    private void calcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritKeyReleased

    private void calcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcritKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_calcritKeyTyped

    private void cbcritItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbcritItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritItemStateChanged

    private void cbcritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbcritActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritActionPerformed

    private void cbcritKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritKeyPressed

    private void cbcritKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritKeyReleased

    private void cbcritKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbcritKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_cbcritKeyTyped

    private void cbsrchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbsrchItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbsrchItemStateChanged

    private void cbsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbsrchActionPerformed
        // TODO add your handling code here:
        String sfld = (String) cbsrch.getSelectedItem();
        if(sfld.equals("Select Field"))
        {
            btnsrch.setEnabled(false);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.setVisible(false);
            DefaultTableModel model = (DefaultTableModel) tblpurchase.getModel();
            while (model.getRowCount()>0)
            model.removeRow(0);
        }
        else if(sfld.equals("exp"))
        {
            String date=((JTextField)calcrit.getDateEditor().getUiComponent()).getText() + "";
            if(date.equals(""))
            {
                btnsrch.setEnabled(false);
            }
            else
            {
                btnsrch.setEnabled(true);
            }
            calcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            cbcrit.setVisible(false);
            cbop.setVisible(false);
        }
        else if(sfld.equals("pur"))
        {
            String date=((JTextField)calcrit.getDateEditor().getUiComponent()).getText() + "";
            if(date.equals(""))
            {
                btnsrch.setEnabled(false);
            }
            else
            {
                btnsrch.setEnabled(true);
            }
            calcrit.setMaxSelectableDate(new Date());
            calcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            cbcrit.setVisible(false);
            cbop.setVisible(false);
        }
        else if(sfld.equals("patientName"))
        {
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select distinct patientName from purchasemaster ORDER BY patientNAME;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String patientName = rs.getString("patientName");
                    cbcrit.addItem(patientName);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        else if(sfld.equals("vendorName"))
        {
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            cbcrit.addItem("-");
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select distinct vendorName from vendormaster ORDER BY vendorNAME;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String vendorName = rs.getString("vendorName");
                    cbcrit.addItem(vendorName);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        else if(sfld.equals("itemName"))
        {
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select itemName from itemmaster ORDER BY ITEMNAME;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String itemName = rs.getString("itemName");
                    cbcrit.addItem(itemName);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        else if(sfld.equals("openQty"))
        {
            btnsrch.setEnabled(false);
            calcrit.setVisible(false);
            cbop.setVisible(true);
            cbop.setSelectedIndex(0);
            txtcrit.setVisible(true);
            txtcrit.setText("");
            cbcrit.setVisible(false);
        }
        else if(sfld.equals("batchNo"))
        {
            btnsrch.setEnabled(true);
            cbcrit.setVisible(true);
            txtcrit.setVisible(false);
            txtcrit.setText("");
            calcrit.setVisible(false);
            cbop.setVisible(false);
            cbcrit.removeAllItems();
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String s = "select distinct batchNo from purchasemaster;";
                ResultSet rs = stmt.executeQuery(s);
                while(rs.next())
                {
                    String batchNo = rs.getString("batchNo");
                    cbcrit.addItem(batchNo);
                }
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_cbsrchActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        Color s=new Color(214,223,245);
        scrpurchase.getViewport().setBackground(s);
    }//GEN-LAST:event_formWindowActivated

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String p, ven, item, batch, exp, oqs, pur;
        int oq;
        item = txtitem.getText();
        batch = txtbatch.getText();
        oqs = txtoq.getText();
        if(chkcpd.isSelected())
        {
            SimpleDateFormat sdf = new SimpleDateFormat("d MMM, yyyy");
            pur = sdf.format(calpur.getDate());
        }
        else
        {
            pur = txtpur.getText();
        }
        String date1 = pur.substring(0,2);
        String d1,month1,year1;
        if(date1.substring(1,2).equals(" "))
        {
            d1 = "0"+date1.substring(0,1);
            month1 = pur.substring(2,5);
            year1 = pur.substring(7,11);
        }
        else
        {
            d1 = date1;
            month1 = pur.substring(3,6);
            year1 = pur.substring(8,12);
        }
        String mon1="";
        if(month1.equals("Jan"))
        {
            mon1="01";
        }
        else if(month1.equals("Feb"))
        {
            mon1="02";
        }
        else if(month1.equals("Mar"))
        {
            mon1="03";
        }
        else if(month1.equals("Apr"))
        {
            mon1="04";
        }
        else if(month1.equals("May"))
        {
            mon1="05";
        }
        else if(month1.equals("Jun"))
        {
            mon1="06";
        }
        else if(month1.equals("Jul"))
        {
            mon1="07";
        }
        else if(month1.equals("Aug"))
        {
            mon1="08";
        }
        else if(month1.equals("Sep"))
        {
            mon1="09";
        }
        else if(month1.equals("Oct"))
        {
            mon1="10";
        }
        else if(month1.equals("Nov"))
        {
            mon1="11";
        }
        else if(month1.equals("Dec"))
        {
            mon1="12";
        }
        int y1 = Integer.parseInt(year1);
        int m1 = Integer.parseInt(mon1);
        pur = year1+"-"+mon1+"-"+d1;
        if(rbp.isSelected())
        {
            p = txtp.getText();
            ven = "-";
            if(p.equals("")||batch.equals("")||oqs.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Fill in the required fields!");
            }
            else
            {
                int oqslength = oqs.length();
                int x,c=0;
                for(x=0;x<oqslength;x++)
                {
                    char a = oqs.charAt(x);
                    if(a<=57&&a>=48)
                    {
                        continue;
                    }
                    else
                    {
                        c++;
                    }
                }
                if(c!=0)
                {
                    JOptionPane.showMessageDialog(null,"Enter numbers in opening quantity!");
                }
                else
                {
                    oq = Integer.parseInt(oqs);
                    if (rbred.isSelected()==false&&rbced.isSelected()==false)
                    {
                        exp = txtexp.getText();
                        String date = exp.substring(0,2);
                        String d,month,year;
                        if(date.substring(1,2).equals(" "))
                        {
                            d = "0"+date.substring(0,1);
                            month = exp.substring(2,5);
                            year = exp.substring(7,11);
                        }
                        else
                        {
                            d = date;
                            month = exp.substring(3,6);
                            year = exp.substring(8,12);
                        }
                        String mon="";
                        if(month.equals("Jan"))
                        {
                            mon="01";
                        }
                        else if(month.equals("Feb"))
                        {
                            mon="02";
                        }
                        else if(month.equals("Mar"))
                        {
                            mon="03";
                        }
                        else if(month.equals("Apr"))
                        {
                            mon="04";
                        }
                        else if(month.equals("May"))
                        {
                            mon="05";
                        }
                        else if(month.equals("Jun"))
                        {
                            mon="06";
                        }
                        else if(month.equals("Jul"))
                        {
                            mon="07";
                        }
                        else if(month.equals("Aug"))
                        {
                            mon="08";
                        }
                        else if(month.equals("Sep"))
                        {
                            mon="09";
                        }
                        else if(month.equals("Oct"))
                        {
                            mon="10";
                        }
                        else if(month.equals("Nov"))
                        {
                            mon="11";
                        }
                        else if(month.equals("Dec"))
                        {
                            mon="12";
                        }
                        exp = year+"-"+mon+"-"+d;
                        try
                        {
                            Class.forName("java.sql.Driver");
                            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                            Statement stm = conn.createStatement();
                            String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                            String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                            stm.executeUpdate(str1);
                            stm.executeUpdate(str);
                            JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                            btnss.clearSelection();
                            rbp.setEnabled(false);
                            rbv.setEnabled(false);
                            txtp.setText("");
                            txtp.setEnabled(false);
                            cbven.removeAllItems();
                            cbven.setEnabled(false);
                            txtitem.setText("");
                            txtitem.setEnabled(false);
                            txtbatch.setText("");
                            txtbatch.setEnabled(false);
                            txtoq.setText("");
                            txtoq.setEnabled(false);
                            txtexp.setText("");
                            txtexp.setEnabled(false);
                            bg.clearSelection();
                            rbred.setEnabled(false);
                            rbced.setEnabled(false);
                            calexp.setCalendar(null);
                            JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                            editor.setEnabled(false);
                            editor.setBackground(Color.white);
                            editor.setDisabledTextColor(Color.black);
                            calexp.setEnabled(false);
                            txtpur.setText("");
                            txtpur.setEnabled(false);
                            chkcpd.setSelected(false);
                            chkcpd.setEnabled(false);
                            calpur.setCalendar(null);
                            JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                            editor1.setEnabled(false);
                            editor1.setBackground(Color.white);
                            editor1.setDisabledTextColor(Color.black);
                            calpur.setEnabled(false);
                            btnsrch.doClick();
                            stm.close();
                            conn.close();
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(null,e);
                        }
                    }
                    else
                    {
                        if(rbred.isSelected())
                        {
                            exp="-";
                            try
                            {
                                Class.forName("java.sql.Driver");
                                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                Statement stm = conn.createStatement();
                                String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                                String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                                stm.executeUpdate(str1);
                                stm.executeUpdate(str);
                                JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                btnss.clearSelection();
                                rbp.setEnabled(false);
                                rbv.setEnabled(false);
                                txtp.setText("");
                                txtp.setEnabled(false);
                                cbven.removeAllItems();
                                cbven.setEnabled(false);
                                txtitem.setText("");
                                txtitem.setEnabled(false);
                                txtbatch.setText("");
                                txtbatch.setEnabled(false);
                                txtoq.setText("");
                                txtoq.setEnabled(false);
                                txtexp.setText("");
                                txtexp.setEnabled(false);
                                bg.clearSelection();
                                rbred.setEnabled(false);
                                rbced.setEnabled(false);
                                calexp.setCalendar(null);
                                JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                editor.setEnabled(false);
                                editor.setBackground(Color.white);
                                editor.setDisabledTextColor(Color.black);
                                calexp.setEnabled(false);
                                txtpur.setText("");
                                txtpur.setEnabled(false);
                                chkcpd.setSelected(false);
                                chkcpd.setEnabled(false);
                                calpur.setCalendar(null);
                                JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                                editor1.setEnabled(false);
                                editor1.setBackground(Color.white);
                                editor1.setDisabledTextColor(Color.black);
                                calpur.setEnabled(false);
                                btnsrch.doClick();
                                stm.close();
                                conn.close();
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(null,e);
                            }
                        }
                        else
                        {
                            SimpleDateFormat df = new SimpleDateFormat("d MMM, yyyy");
                            exp = df.format(calexp.getDate());
                            String date = exp.substring(0,2);
                            String d,month,year;
                            if(date.substring(1,2).equals(" "))
                            {
                                d = "0"+date.substring(0,1);
                                month = exp.substring(2,5);
                                year = exp.substring(7,11);
                            }
                            else
                            {
                                d = date;
                                month = exp.substring(3,6);
                                year = exp.substring(8,12);
                            }
                            String mon="";
                            if(month.equals("Jan"))
                            {
                                mon="01";
                            }
                            else if(month.equals("Feb"))
                            {
                                mon="02";
                            }
                            else if(month.equals("Mar"))
                            {
                                mon="03";
                            }
                            else if(month.equals("Apr"))
                            {
                                mon="04";
                            }
                            else if(month.equals("May"))
                            {
                                mon="05";
                            }
                            else if(month.equals("Jun"))
                            {
                                mon="06";
                            }
                            else if(month.equals("Jul"))
                            {
                                mon="07";
                            }
                            else if(month.equals("Aug"))
                            {
                                mon="08";
                            }
                            else if(month.equals("Sep"))
                            {
                                mon="09";
                            }
                            else if(month.equals("Oct"))
                            {
                                mon="10";
                            }
                            else if(month.equals("Nov"))
                            {
                                mon="11";
                            }
                            else if(month.equals("Dec"))
                            {
                                mon="12";
                            }
                            int y = Integer.parseInt(year);
                            String curdate = java.time.LocalDate.now().toString();
                            String curmonth = curdate.substring(5,7);
                            String curyear = curdate.substring(0,4);
                            int curm = Integer.parseInt(curmonth);
                            int cury = Integer.parseInt(curyear);
                            int m = Integer.parseInt(mon);
                            exp = year+"-"+mon+"-"+d;
                            if(y>cury)
                            {
                                try
                                {
                                    Class.forName("java.sql.Driver");
                                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                    Statement stm = conn.createStatement();
                                    String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                                    String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                                    stm.executeUpdate(str1);
                                    stm.executeUpdate(str);
                                    JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                    btnss.clearSelection();
                                    rbp.setEnabled(false);
                                    rbv.setEnabled(false);
                                    txtp.setText("");
                                    txtp.setEnabled(false);
                                    cbven.removeAllItems();
                                    cbven.setEnabled(false);
                                    txtitem.setText("");
                                    txtitem.setEnabled(false);
                                    txtbatch.setText("");
                                    txtbatch.setEnabled(false);
                                    txtoq.setText("");
                                    txtoq.setEnabled(false);
                                    txtexp.setText("");
                                    txtexp.setEnabled(false);
                                    bg.clearSelection();
                                    rbred.setEnabled(false);
                                    rbced.setEnabled(false);
                                    calexp.setCalendar(null);
                                    JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                    editor.setEnabled(false);
                                    editor.setBackground(Color.white);
                                    editor.setDisabledTextColor(Color.black);
                                    calexp.setEnabled(false);
                                    txtpur.setText("");
                                    txtpur.setEnabled(false);
                                    chkcpd.setSelected(false);
                                    chkcpd.setEnabled(false);
                                    calpur.setCalendar(null);
                                    JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                                    editor1.setEnabled(false);
                                    editor1.setBackground(Color.white);
                                    editor1.setDisabledTextColor(Color.black);
                                    calpur.setEnabled(false);
                                    btnsrch.doClick();
                                    stm.close();
                                    conn.close();
                                }
                                catch(Exception e)
                                {
                                    JOptionPane.showMessageDialog(null,e);
                                }
                            }
                            else if(y==cury)
                            {
                                if(m>curm)
                                {
                                    try
                                    {
                                        Class.forName("java.sql.Driver");
                                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                        Statement stm = conn.createStatement();
                                        String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                                        String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                                        stm.executeUpdate(str1);
                                        stm.executeUpdate(str);
                                        JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                        btnss.clearSelection();
                                        rbp.setEnabled(false);
                                        rbv.setEnabled(false);
                                        txtp.setText("");
                                        txtp.setEnabled(false);
                                        cbven.removeAllItems();
                                        cbven.setEnabled(false);
                                        txtitem.setText("");
                                        txtitem.setEnabled(false);
                                        txtbatch.setText("");
                                        txtbatch.setEnabled(false);
                                        txtoq.setText("");
                                        txtoq.setEnabled(false);
                                        txtexp.setText("");
                                        txtexp.setEnabled(false);
                                        bg.clearSelection();
                                        rbred.setEnabled(false);
                                        rbced.setEnabled(false);
                                        calexp.setCalendar(null);
                                        JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                        editor.setEnabled(false);
                                        editor.setBackground(Color.white);
                                        editor.setDisabledTextColor(Color.black);
                                        calexp.setEnabled(false);
                                        txtpur.setText("");
                                        txtpur.setEnabled(false);
                                        chkcpd.setSelected(false);
                                        chkcpd.setEnabled(false);
                                        calpur.setCalendar(null);
                                        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                                        editor1.setEnabled(false);
                                        editor1.setBackground(Color.white);
                                        editor1.setDisabledTextColor(Color.black);
                                        calpur.setEnabled(false);
                                        btnsrch.doClick();
                                        stm.close();
                                        conn.close();
                                    }
                                    catch(Exception e)
                                    {
                                        JOptionPane.showMessageDialog(null,e);
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                            }
                        }
                    }
                }
            }
        }
        else if (rbv.isSelected())
        {
            ven = cbven.getSelectedItem().toString();
            p = "-";
            if(batch.equals("")||oqs.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Fill in the required fields!");
            }
            else
            {
                int oqslength = oqs.length();
                int x,c=0;
                for(x=0;x<oqslength;x++)
                {
                    char a = oqs.charAt(x);
                    if(a<=57&&a>=48)
                    {
                        continue;
                    }
                    else
                    {
                        c++;
                    }
                }
                if(c!=0)
                {
                    JOptionPane.showMessageDialog(null,"Enter numbers in opening quantity!");
                }
                else
                {
                    oq = Integer.parseInt(oqs);
                    if (rbred.isSelected()==false&&rbced.isSelected()==false)
                    {
                        exp = txtexp.getText();
                        if(exp.compareTo("-")!=0)
                        {
                            String date = exp.substring(0,2);
                            String d,month,year;
                            if(date.substring(1,2).equals(" "))
                            {
                                d = "0"+date.substring(0,1);
                                month = exp.substring(2,5);
                                year = exp.substring(7,11);
                            }
                            else
                            {
                                d = date;
                                month = exp.substring(3,6);
                                year = exp.substring(8,12);
                            }
                            String mon="";
                            if(month.equals("Jan"))
                            {
                                mon="01";
                            }
                            else if(month.equals("Feb"))
                            {
                                mon="02";
                            }
                            else if(month.equals("Mar"))
                            {
                                mon="03";
                            }
                            else if(month.equals("Apr"))
                            {
                                mon="04";
                            }
                            else if(month.equals("May"))
                            {
                                mon="05";
                            }
                            else if(month.equals("Jun"))
                            {
                                mon="06";
                            }
                            else if(month.equals("Jul"))
                            {
                                mon="07";
                            }
                            else if(month.equals("Aug"))
                            {
                                mon="08";
                            }
                            else if(month.equals("Sep"))
                            {
                                mon="09";
                            }
                            else if(month.equals("Oct"))
                            {
                                mon="10";
                            }
                            else if(month.equals("Nov"))
                            {
                                mon="11";
                            }
                            else if(month.equals("Dec"))
                            {
                                mon="12";
                            }
                            exp = year+"-"+mon+"-"+d;
                        }
                        try
                        {
                            Class.forName("java.sql.Driver");
                            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                            Statement stm = conn.createStatement();
                            String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                            String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                            stm.executeUpdate(str1);
                            stm.executeUpdate(str);
                            JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                            btnss.clearSelection();
                            rbp.setEnabled(false);
                            rbv.setEnabled(false);
                            txtp.setText("");
                            txtp.setEnabled(false);
                            cbven.removeAllItems();
                            cbven.setEnabled(false);
                            txtitem.setText("");
                            txtitem.setEnabled(false);
                            txtbatch.setText("");
                            txtbatch.setEnabled(false);
                            txtoq.setText("");
                            txtoq.setEnabled(false);
                            txtexp.setText("");
                            txtexp.setEnabled(false);
                            bg.clearSelection();
                            rbred.setEnabled(false);
                            rbced.setEnabled(false);
                            calexp.setCalendar(null);
                            JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                            editor.setEnabled(false);
                            editor.setBackground(Color.white);
                            editor.setDisabledTextColor(Color.black);
                            calexp.setEnabled(false);
                            txtpur.setText("");
                            txtpur.setEnabled(false);
                            chkcpd.setSelected(false);
                            chkcpd.setEnabled(false);
                            calpur.setCalendar(null);
                            JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                            editor1.setEnabled(false);
                            editor1.setBackground(Color.white);
                            editor1.setDisabledTextColor(Color.black);
                            calpur.setEnabled(false);
                            btnsrch.doClick();
                            stm.close();
                            conn.close();
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(null,e);
                        }
                    }
                    else
                    {
                        if(rbred.isSelected())
                        {
                            exp="-";
                            try
                            {
                                Class.forName("java.sql.Driver");
                                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                Statement stm = conn.createStatement();
                                String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                                String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                                stm.executeUpdate(str1);
                                stm.executeUpdate(str);
                                JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                btnss.clearSelection();
                                rbp.setEnabled(false);
                                rbv.setEnabled(false);
                                txtp.setText("");
                                txtp.setEnabled(false);
                                cbven.removeAllItems();
                                cbven.setEnabled(false);
                                txtitem.setText("");
                                txtitem.setEnabled(false);
                                txtbatch.setText("");
                                txtbatch.setEnabled(false);
                                txtoq.setText("");
                                txtoq.setEnabled(false);
                                txtexp.setText("");
                                txtexp.setEnabled(false);
                                bg.clearSelection();
                                rbred.setEnabled(false);
                                rbced.setEnabled(false);
                                calexp.setCalendar(null);
                                JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                editor.setEnabled(false);
                                editor.setBackground(Color.white);
                                editor.setDisabledTextColor(Color.black);
                                calexp.setEnabled(false);
                                txtpur.setText("");
                                txtpur.setEnabled(false);
                                chkcpd.setSelected(false);
                                chkcpd.setEnabled(false);
                                calpur.setCalendar(null);
                                JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                                editor1.setEnabled(false);
                                editor1.setBackground(Color.white);
                                editor1.setDisabledTextColor(Color.black);
                                calpur.setEnabled(false);
                                btnsrch.doClick();
                                stm.close();
                                conn.close();
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(null,e);
                            }
                        }
                        else
                        {
                            SimpleDateFormat df = new SimpleDateFormat("d MMM, yyyy");
                            exp = df.format(calexp.getDate());
                            String date = exp.substring(0,2);
                            String d,month,year;
                            if(date.substring(1,2).equals(" "))
                            {
                                d = "0"+date.substring(0,1);
                                month = exp.substring(2,5);
                                year = exp.substring(7,11);
                            }
                            else
                            {
                                d = date;
                                month = exp.substring(3,6);
                                year = exp.substring(8,12);
                            }
                            String mon="";
                            if(month.equals("Jan"))
                            {
                                mon="01";
                            }
                            else if(month.equals("Feb"))
                            {
                                mon="02";
                            }
                            else if(month.equals("Mar"))
                            {
                                mon="03";
                            }
                            else if(month.equals("Apr"))
                            {
                                mon="04";
                            }
                            else if(month.equals("May"))
                            {
                                mon="05";
                            }
                            else if(month.equals("Jun"))
                            {
                                mon="06";
                            }
                            else if(month.equals("Jul"))
                            {
                                mon="07";
                            }
                            else if(month.equals("Aug"))
                            {
                                mon="08";
                            }
                            else if(month.equals("Sep"))
                            {
                                mon="09";
                            }
                            else if(month.equals("Oct"))
                            {
                                mon="10";
                            }
                            else if(month.equals("Nov"))
                            {
                                mon="11";
                            }
                            else if(month.equals("Dec"))
                            {
                                mon="12";
                            }
                            int y = Integer.parseInt(year);
                            String curdate = java.time.LocalDate.now().toString();
                            String curmonth = curdate.substring(5,7);
                            String curyear = curdate.substring(0,4);
                            int curm = Integer.parseInt(curmonth);
                            int cury = Integer.parseInt(curyear);
                            int m = Integer.parseInt(mon);
                            exp = year+"-"+mon+"-"+d;
                            if(y>cury)
                            {
                                try
                                {
                                    Class.forName("java.sql.Driver");
                                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                    Statement stm = conn.createStatement();
                                    String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                                    String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                                    stm.executeUpdate(str1);
                                    stm.executeUpdate(str);
                                    JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                    btnss.clearSelection();
                                    rbp.setEnabled(false);
                                    rbv.setEnabled(false);
                                    txtp.setText("");
                                    txtp.setEnabled(false);
                                    cbven.removeAllItems();
                                    cbven.setEnabled(false);
                                    txtitem.setText("");
                                    txtitem.setEnabled(false);
                                    txtbatch.setText("");
                                    txtbatch.setEnabled(false);
                                    txtoq.setText("");
                                    txtoq.setEnabled(false);
                                    txtexp.setText("");
                                    txtexp.setEnabled(false);
                                    bg.clearSelection();
                                    rbred.setEnabled(false);
                                    rbced.setEnabled(false);
                                    calexp.setCalendar(null);
                                    JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                    editor.setEnabled(false);
                                    editor.setBackground(Color.white);
                                    editor.setDisabledTextColor(Color.black);
                                    calexp.setEnabled(false);
                                    txtpur.setText("");
                                    txtpur.setEnabled(false);
                                    chkcpd.setSelected(false);
                                    chkcpd.setEnabled(false);
                                    calpur.setCalendar(null);
                                    JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                                    editor1.setEnabled(false);
                                    editor1.setBackground(Color.white);
                                    editor1.setDisabledTextColor(Color.black);
                                    calpur.setEnabled(false);
                                    btnsrch.doClick();
                                    stm.close();
                                    conn.close();
                                }
                                    catch(Exception e)
                                    {
                                        JOptionPane.showMessageDialog(null,e);
                                    }
                            }
                            else if(y==cury)
                            {
                                if(m>curm)
                                {
                                    try
                                    {
                                        Class.forName("java.sql.Driver");
                                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                                        Statement stm = conn.createStatement();
                                        String str = "update purchasemaster set patientname = '"+p+"', vendorname = '"+ven+"',openqty='"+oqs+"',exp='"+exp+"',pur='"+pur+"' where itemname = '"+item+"' and batchno ='"+batch+"';";
                                        String str1 = "update stockMaster set openqty ='"+oqs+"', exp='"+exp+"' where itemname ='"+item+"' and batchno ='"+batch+"';";
                                        stm.executeUpdate(str1);
                                        stm.executeUpdate(str);
                                        JOptionPane.showMessageDialog(null,"Record Saved successfully.");
                                        btnss.clearSelection();
                                        rbp.setEnabled(false);
                                        rbv.setEnabled(false);
                                        txtp.setText("");
                                        txtp.setEnabled(false);
                                        cbven.removeAllItems();
                                        cbven.setEnabled(false);
                                        txtitem.setText("");
                                        txtitem.setEnabled(false);
                                        txtbatch.setText("");
                                        txtbatch.setEnabled(false);
                                        txtoq.setText("");
                                        txtoq.setEnabled(false);
                                        txtexp.setText("");
                                        txtexp.setEnabled(false);
                                        bg.clearSelection();
                                        rbred.setEnabled(false);
                                        rbced.setEnabled(false);
                                        calexp.setCalendar(null);
                                        JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();
                                        editor.setEnabled(false);
                                        editor.setBackground(Color.white);
                                        editor.setDisabledTextColor(Color.black);
                                        calexp.setEnabled(false);
                                        txtpur.setText("");
                                        txtpur.setEnabled(false);
                                        chkcpd.setSelected(false);
                                        chkcpd.setEnabled(false);
                                        calpur.setCalendar(null);
                                        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();
                                        editor1.setEnabled(false);
                                        editor1.setBackground(Color.white);
                                        editor1.setDisabledTextColor(Color.black);
                                        calpur.setEnabled(false);
                                        btnsrch.doClick();
                                        stm.close();
                                        conn.close();
                                    }
                                    catch(Exception e)
                                    {
                                        JOptionPane.showMessageDialog(null,e);
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Invalid Expiry Date. Try again.");
                            }
                        }
                    }
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a stock supplier!");
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void rbcedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbcedStateChanged
        // TODO add your handling code here:       
        
    }//GEN-LAST:event_rbcedStateChanged

    private void rbredStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbredStateChanged
        // TODO add your handling code here:
        if(rbred.isSelected())
        {
            calexp.setEnabled(false);
            JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();            
            editor.setEnabled(false);
            editor.setBackground(Color.white);
            editor.setDisabledTextColor(Color.black);    
        }
    }//GEN-LAST:event_rbredStateChanged

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:             
        if(tblpurchase.getSelectionModel().isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the Table to Edit.");
        }
        else
        {
            DefaultTableModel model=(DefaultTableModel)tblpurchase.getModel();            
            cbven.setEnabled(false);            
            cbven.addItem("-");
            txtpur.setEnabled(false);
            txtexp.setEnabled(false);
            txtoq.setEnabled(false);            
            calexp.setCalendar(null);
            calpur.setCalendar(null);
            calpur.setEnabled(false);
            calexp.setEnabled(false);
            chkcpd.setSelected(false);
            chkcpd.setEnabled(false);
            btnss.clearSelection();
            bg.clearSelection();
            txtp.setText("");
            txtexp.setText("");
            txtpur.setText("");
            txtbatch.setText("");
            txtoq.setText("");
            txtitem.setText("");            
            btnsave.setEnabled(true);
        txtoq.setEnabled(true);    
        rbred.setEnabled(true);
        rbced.setEnabled(true);
        chkcpd.setEnabled(true);
        rbp.setEnabled(true);
        rbv.setEnabled(true);                    
            int i=tblpurchase.getSelectedRow();
            String p=(String) model.getValueAt(i, 1);        
            cbven.removeAllItems();
            cbven.addItem("-");
            try
            {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query="SELECT DISTINCT VENDORNAME FROM vendormaster ORDER BY VENDORNAME;";
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next())
                {
                    String v=rs.getString("vendorname");
                    cbven.addItem(v);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }            
            txtp.setText(p);            
            cbven.setSelectedItem(model.getValueAt(i, 2).toString());
            txtitem.setText(model.getValueAt(i, 3).toString());
            txtbatch.setText(model.getValueAt(i, 4).toString());
            txtoq.setText(model.getValueAt(i, 5).toString());
            txtexp.setText(model.getValueAt(i, 6).toString());
            if(p.equals("-"))
            {                
                rbv.setSelected(true);
            }
            else
            {
                rbp.setSelected(true);
                cbven.setEnabled(false);
            }                
            if(cbven.getSelectedItem().toString().compareTo("-")==0)
            {
                rbp.setSelected(true);                
            }
            else
            {
                cbven.setEnabled(true);
            }
            if(txtexp.getText().compareTo("-")!=0)
                {
                    Date date;
                try {
                    date = new SimpleDateFormat("d MMM, yyyy").parse(txtexp.getText());
                    calexp.setDate(date);
                } catch (ParseException ex) {
                    Logger.getLogger(explorePurchase.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
                }
                else
                {
                    calexp.setDate(null);
                }
                String pur=model.getValueAt(i,7).toString();
                txtpur.setText(pur);
                Date date;
            try {
                date = new SimpleDateFormat("d MMM, yyyy").parse(pur);
                calpur.setDate(date);        
            } catch (ParseException ex) {
                Logger.getLogger(explorePurchase.class.getName()).log(Level.SEVERE, null, ex);
            }
                    JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();            
        editor.setEnabled(false);
        editor.setBackground(Color.white);
        editor.setDisabledTextColor(Color.black);  
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();            
        editor1.setEnabled(false);
        editor1.setBackground(Color.white);
        editor1.setDisabledTextColor(Color.black);  
        }
    }//GEN-LAST:event_btneditActionPerformed

    private void calexpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calexpMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_calexpMousePressed

    private void calexpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calexpMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_calexpMouseClicked

    private void calexpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_calexpFocusGained

    }//GEN-LAST:event_calexpFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "select * from login";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            String user = rs.getString("username");            
            if(user.equals("Admin"))
            {
                String q = "select*from access;";
                ResultSet rs1 = stmt.executeQuery(q);
                while(rs1.next())
                {
                    String f = rs1.getString("feature");                    
                    if(f.equals("edit"))
                    {
                        pnledit.setEnabled(true);
                    }
                    else
                    {
                        sep.setVisible(false);
                        pnledit.setEnabled(false);
                        this.setSize(1200,520);
                    }
                }
                rs1.close();
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        txtp.setDisabledTextColor(Color.black);
        txtp.setBackground(Color.white);
        txtitem.setDisabledTextColor(Color.black);
        txtitem.setBackground(Color.white);
        txtbatch.setDisabledTextColor(Color.black);
        txtbatch.setBackground(Color.white);
        txtoq.setDisabledTextColor(Color.black);
        txtoq.setBackground(Color.white);
        txtpur.setDisabledTextColor(Color.black);
        txtpur.setBackground(Color.white);
        txtexp.setDisabledTextColor(Color.black);
        txtexp.setBackground(Color.white);
        Color s=new Color(214,223,245);
        scrpurchase.getViewport().setBackground(s);
        txtcrit.setVisible(false);
        calcrit.setVisible(false);
        cbop.setVisible(false);
        cbcrit.setVisible(false);
        calexp.setMinSelectableDate(new Date());
        calpur.setMaxSelectableDate(new Date());
        JTextFieldDateEditor editor = (JTextFieldDateEditor) calexp.getDateEditor();            
        editor.setEnabled(false);
        editor.setBackground(Color.white);
        editor.setDisabledTextColor(Color.black);        
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();            
        editor1.setEnabled(false);
        editor1.setBackground(Color.white);
        editor1.setDisabledTextColor(Color.black);        
        JTextFieldDateEditor editor2 = (JTextFieldDateEditor) calcrit.getDateEditor();            
        editor2.setEnabled(false);
        editor2.setBackground(Color.white);
        editor2.setDisabledTextColor(Color.black);
    }//GEN-LAST:event_formWindowOpened

    private void rbpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbpActionPerformed

    private void rbpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbpItemStateChanged
        // TODO add your handling code here:       
        if(rbp.isSelected())
        {
            txtp.setEnabled(true);
            cbven.setEnabled(false);
            cbven.setSelectedIndex(0);
            if(txtp.getText().equals("")||txtp.getText().equals("-"))
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }            
        }                
    }//GEN-LAST:event_rbpItemStateChanged

    private void rbvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbvItemStateChanged
        // TODO add your handling code here:        
        if(rbv.isSelected())
        {
            txtp.setEnabled(false);
            txtp.setText("-");
            cbven.setEnabled(true);
            if(cbven.getSelectedIndex()==0)
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }
        }
    }//GEN-LAST:event_rbvItemStateChanged

    private void cbvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbvenActionPerformed
        // TODO add your handling code here:        
         if(cbven.getSelectedItem()==(null))
        {
            if(txtp.isEnabled()==false)
            {
                if(txtp.getText().equals("-"))
            {
                btnsave.setEnabled(false);
            }                 
        }                             
        }
        else
        {
            if(cbven.getSelectedItem().toString().equals("-"))
            {
                btnsave.setEnabled(false);
            }
            else
            {
                btnsave.setEnabled(true);
            }            
        }           
    }//GEN-LAST:event_cbvenActionPerformed

    private void txtpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyPressed
        // TODO add your handling code here:        
        if(txtp.getText().equals("")||txtp.getText().equals("-"))
        {
            btnsave.setEnabled(false);
        }
        else
        {
            btnsave.setEnabled(true);
        }
    }//GEN-LAST:event_txtpKeyPressed

    private void txtpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyReleased
        // TODO add your handling code here:      
        if(txtp.getText().equals("")||txtp.getText().equals("-"))
        {
            btnsave.setEnabled(false);
        }
        else
        {
            btnsave.setEnabled(true);
        }
    }//GEN-LAST:event_txtpKeyReleased

    private void txtpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyTyped
        // TODO add your handling code here:    
        if(txtp.getText().equals("")||txtp.getText().equals("-"))
        {
            btnsave.setEnabled(false);
        }
        else
        {
            btnsave.setEnabled(true);
        }
    }//GEN-LAST:event_txtpKeyTyped

    private void rbpStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbpStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_rbpStateChanged

    private void rbvStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbvStateChanged
        // TODO add your handling code here:
                        
    }//GEN-LAST:event_rbvStateChanged

    private void chkcpdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkcpdItemStateChanged
        // TODO add your handling code here:
        if(chkcpd.isSelected())
        {
            calpur.setEnabled(true);
        }
        else
        {
            calpur.setEnabled(false);
            JTextFieldDateEditor editor1 = (JTextFieldDateEditor) calpur.getDateEditor();            
            editor1.setEnabled(false);
            editor1.setBackground(Color.white);
            editor1.setDisabledTextColor(Color.black);                
        }
    }//GEN-LAST:event_chkcpdItemStateChanged

    private void cbvenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbvenItemStateChanged
        // TODO add your handling code here:        
         
    }//GEN-LAST:event_cbvenItemStateChanged

    private void rbcedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbcedItemStateChanged
        // TODO add your handling code here:
        if(rbced.isSelected())
        {
            calexp.setEnabled(true);
        }
        else
        {
            calexp.setEnabled(false);
        }
    }//GEN-LAST:event_rbcedItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(explorePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(explorePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(explorePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(explorePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new explorePurchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnempty;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsrch;
    private javax.swing.ButtonGroup btnss;
    private com.toedter.calendar.JDateChooser calcrit;
    private com.toedter.calendar.JDateChooser calexp;
    private com.toedter.calendar.JDateChooser calpur;
    private javax.swing.JComboBox<String> cbcrit;
    private javax.swing.JComboBox<String> cbop;
    private javax.swing.JComboBox<String> cbsrch;
    private javax.swing.JComboBox<String> cbven;
    private javax.swing.JCheckBox chkcpd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblbatch;
    private javax.swing.JLabel lblexp;
    private javax.swing.JLabel lblitem;
    private javax.swing.JLabel lbloq;
    private javax.swing.JPanel pnledit;
    private javax.swing.JRadioButton rbced;
    private javax.swing.JRadioButton rbp;
    private javax.swing.JRadioButton rbred;
    private javax.swing.JRadioButton rbv;
    private javax.swing.JScrollPane scrpurchase;
    private javax.swing.JSeparator sep;
    private javax.swing.JTable tblpurchase;
    private javax.swing.JTextField txtbatch;
    private javax.swing.JTextField txtcrit;
    private javax.swing.JTextField txtexp;
    private javax.swing.JTextField txtitem;
    private javax.swing.JTextField txtoq;
    private javax.swing.JTextField txtp;
    private javax.swing.JTextField txtpur;
    // End of variables declaration//GEN-END:variables

}
