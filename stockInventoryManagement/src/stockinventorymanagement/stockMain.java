/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockinventorymanagement;
import java.awt.Color;
import java.sql.*;
import javax.swing.ImageIcon;

import javax.swing.table.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Anish
 */
public class stockMain extends javax.swing.JFrame {

    /**
     * Creates new form stockRoomTable
     */
    public stockMain() {
        initComponents();       
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgfeat = new javax.swing.JDialog();
        chka = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        chkd = new javax.swing.JCheckBox();
        chke = new javax.swing.JCheckBox();
        btnsave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tpstock = new javax.swing.JTabbedPane();
        scrstock = new javax.swing.JScrollPane();
        tblstock = new javax.swing.JTable();
        scritem = new javax.swing.JScrollPane();
        tblitem = new javax.swing.JTable();
        scrvendor = new javax.swing.JScrollPane();
        tblvendor = new javax.swing.JTable();
        scrpurchase = new javax.swing.JScrollPane();
        tblpurchase = new javax.swing.JTable();
        scrissue = new javax.swing.JScrollPane();
        tblissue = new javax.swing.JTable();
        cbn = new javax.swing.JComboBox<>();
        pnlop = new javax.swing.JPanel();
        btnadd = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnlo = new javax.swing.JButton();
        lbluser = new javax.swing.JLabel();
        btnf = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        dlgfeat.setTitle("Restrict Features");
        dlgfeat.setBackground(new java.awt.Color(141, 230, 247));
        dlgfeat.setIconImage(null);
        dlgfeat.setLocation(new java.awt.Point(0, 0));
        dlgfeat.setMinimumSize(new java.awt.Dimension(300, 200));
        dlgfeat.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                dlgfeatWindowOpened(evt);
            }
        });

        chka.setText("Add");
        chka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Control accessible features :");

        chkd.setText("Delete");

        chke.setText("Edit");

        btnsave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgfeatLayout = new javax.swing.GroupLayout(dlgfeat.getContentPane());
        dlgfeat.getContentPane().setLayout(dlgfeatLayout);
        dlgfeatLayout.setHorizontalGroup(
            dlgfeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgfeatLayout.createSequentialGroup()
                .addGroup(dlgfeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(dlgfeatLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dlgfeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dlgfeatLayout.createSequentialGroup()
                                .addComponent(chka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chke))
                            .addComponent(jLabel2)
                            .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        dlgfeatLayout.setVerticalGroup(
            dlgfeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgfeatLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(dlgfeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chka)
                    .addComponent(chkd)
                    .addComponent(chke))
                .addGap(18, 18, 18)
                .addComponent(btnsave)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stock Inventory");
        setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1920, 1020));
        setPreferredSize(new java.awt.Dimension(1920, 1020));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tpstock.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tpstock.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tpstockStateChanged(evt);
            }
        });
        tpstock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tpstockFocusGained(evt);
            }
        });
        tpstock.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tpstockComponentShown(evt);
            }
        });

        tblstock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Item Name", "Batch No.", "Opening Qty.", "Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblstock.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrstock.setViewportView(tblstock);

        tpstock.addTab("Stock Master", scrstock);

        tblitem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Item Name", "Category", "Vendor", "Refrigeration", "Minimum Qty.", "Maximum Qty."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblitem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scritem.setViewportView(tblitem);

        tpstock.addTab("Item Master", scritem);

        tblvendor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Vendor Name", "Address", "City", "Mobile No.", "Landline No.", "Person 1", "Person 2", "E-mail", "Tin No.", "GST No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblvendor.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrvendor.setViewportView(tblvendor);

        tpstock.addTab("Vendor Master", scrvendor);

        tblpurchase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Patient Name", "Vendor Name", "Item Name", "Batch No.", "Opening Qty.", "Expiry Date", "Purchase Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblpurchase.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrpurchase.setViewportView(tblpurchase);

        tpstock.addTab("Purchase Master", scrpurchase);

        tblissue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Item Name", "Batch No.", "Issue Qty.", "Employee Name", "Issue Date", "Issue Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrissue.setViewportView(tblissue);

        tpstock.addTab("Issue Master", scrissue);

        getContentPane().add(tpstock, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 183, 1880, 740));

        cbn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Notifications" }));
        getContentPane().add(cbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 80, 890, 60));

        pnlop.setBackground(new java.awt.Color(141, 230, 247));
        pnlop.setBorder(javax.swing.BorderFactory.createTitledBorder("Operations"));

        btnadd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnse.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        btnse.setText("Search and Edit");
        btnse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlopLayout = new javax.swing.GroupLayout(pnlop);
        pnlop.setLayout(pnlopLayout);
        pnlopLayout.setHorizontalGroup(
            pnlopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlopLayout.createSequentialGroup()
                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnse, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
        );
        pnlopLayout.setVerticalGroup(
            pnlopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd)
                    .addComponent(btndelete)
                    .addComponent(btnse)))
        );

        getContentPane().add(pnlop, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 70, 790, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Information.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 80, 50, 50));

        btnlo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnlo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.jpeg"))); // NOI18N
        btnlo.setText("Log Out");
        btnlo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloActionPerformed(evt);
            }
        });
        getContentPane().add(btnlo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1760, 20, 130, -1));

        lbluser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbluser.setForeground(new java.awt.Color(255, 51, 0));
        lbluser.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(lbluser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 20, 370, 26));

        btnf.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/restrict.jpeg"))); // NOI18N
        btnf.setText("Restrict Features");
        btnf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfActionPerformed(evt);
            }
        });
        getContentPane().add(btnf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1650, 950, 240, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nisarg1920.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 1000));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:        
        if(scrstock.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from stockmaster order by itemname, exp, openqty, batchno;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblstock.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String oq = rs.getString("openqty");
                    String exp = rs.getString("exp");
                    String date;
                    if(exp.equals("-"))
                    {
                        date = "-";
                    }
                    else
                    {
                        String cm = exp.substring(5,7);
                        String cy = exp.substring(0,4);
                        String cd = exp.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        date = cd+" "+mon+", "+cy;
                    }
                    model.addRow(new Object[] {r,itemname,batchno,oq,date});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }            
        }
        else if(scritem.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from itemmaster order by itemname;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblitem.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String cat = rs.getString("category");
                    String ven = rs.getString("vendor");
                    String ref = rs.getString("refrigeration");
                    String min = rs.getString("minQty");
                    String max = rs.getString("maxQty");
                    model.addRow(new Object[] {r,itemname,cat,ven,ref,min,max});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else if(scrvendor.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from vendormaster order by vendorname;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblvendor.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String vname=rs.getString("vendorname");
                    String address=rs.getString("address");
                    String city=rs.getString("city");
                    String mno=rs.getString("mobileno");
                    String lno=rs.getString("landlineno");
                    String p1=rs.getString("person1");
                    String p2=rs.getString("person2");
                    String email=rs.getString("email");
                    String tinno=rs.getString("tinno");
                    String gstno=rs.getString("gstno");
                    model.addRow(new Object[]{r,vname,address,city,mno,lno,p1,p2,email,tinno,gstno});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else if(scrpurchase.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from purchasemaster order by pur, vendorname, patientname, itemname, exp, openqty,batchno;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblpurchase.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String pat = rs.getString("patientname");
                    String ven = rs.getString("vendorname");
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String oq = rs.getString("openqty");
                    String exp = rs.getString("exp");
                    String date;
                    if(exp.equals("-"))
                    {
                        date = "-";
                    }
                    else
                    {
                        String cm = exp.substring(5,7);
                        String cy = exp.substring(0,4);
                        String cd = exp.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        date = cd+" "+mon+", "+cy;
                    }
                    String pur = rs.getString("pur");
                    String date1;
                    String cm1 = pur.substring(5,7);
                    String cy1 = pur.substring(0,4);
                    String cd1 = pur.substring(8,10);
                    String mon1="";
                    if(cm1.equals("01"))
                    {
                        mon1="Jan";
                    }
                    else if(cm1.equals("02"))
                    {
                        mon1="Feb";
                    }
                    else if(cm1.equals("03"))
                    {
                        mon1="Mar";
                    }
                    else if(cm1.equals("04"))
                    {
                        mon1="Apr";
                    }
                    else if(cm1.equals("05"))
                    {
                        mon1="May";
                    }
                    else if(cm1.equals("06"))
                    {
                        mon1="Jun";
                    }
                    else if(cm1.equals("07"))
                    {
                        mon1="Jul";
                    }
                    else if(cm1.equals("08"))
                    {
                        mon1="Aug";
                    }
                    else if(cm1.equals("09"))
                    {
                        mon1="Sep";
                    }
                    else if(cm1.equals("10"))
                    {
                        mon1="Oct";
                    }
                    else if(cm1.equals("11"))
                    {
                        mon1="Nov";
                    }
                    else if(cm1.equals("12"))
                    {
                        mon1="Dec";
                    }
                    date1 = cd1+" "+mon1+", "+cy1;
                    model.addRow(new Object[] {r,pat,ven,itemname,batchno,oq,date,date1});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }            
        }
        else if(scrissue.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from issuemaster order by issuedate, itemname;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblissue.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String issueqty = rs.getString("issueqty");
                    String empname = rs.getString("empname");
                    String issuedate = rs.getString("issuedate");
                    int y = Integer.parseInt(issuedate.substring(0,4));
                    String cm = issuedate.substring(5,7);
                    int m = Integer.parseInt(cm);
                    int d = Integer.parseInt(issuedate.substring(8,10));
                    String mon="";
                    if(cm.equals("01"))
                    {
                        mon="Jan";
                    }
                    else if(cm.equals("02"))
                    {
                        mon="Feb";
                    }
                    else if(cm.equals("03"))
                    {
                        mon="Mar";
                    }
                    else if(cm.equals("04"))
                    {
                        mon="Apr";
                    }
                    else if(cm.equals("05"))
                    {
                        mon="May";
                    }
                    else if(cm.equals("06"))
                    {
                        mon="Jun";
                    }
                    else if(cm.equals("07"))
                    {
                        mon="Jul";
                    }
                    else if(cm.equals("08"))
                    {
                        mon="Aug";
                    }
                    else if(cm.equals("09"))
                    {
                        mon="Sep";
                    }
                    else if(cm.equals("10"))
                    {
                        mon="Oct";
                    }
                    else if(cm.equals("11"))
                    {
                        mon="Nov";
                    }
                    else if(cm.equals("12"))
                    {
                        mon="Dec";
                    }
                    String date = d+" "+mon+", "+y;
                    String issuedept = rs.getString("issuedept");
                    model.addRow(new Object[] {r,itemname,batchno,issueqty,empname,date,issuedept});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query1 = " select s.itemname,sum(openqty),minqty from stockmaster s, itemmaster i where s.itemname=i.itemname group by itemname having minqty>sum(openqty);";
            cbn.removeAllItems();
            cbn.addItem("Notifications");
            ResultSet rs1 = stmt.executeQuery(query1);
            while(rs1.next())
            {
                String item = rs1.getString("itemname");
                String d = "The stock of "+item+" has gone below its Minimum Qty.!";
                cbn.addItem(d);
            }
            String query2 = " select s.itemname,sum(openqty),maxqty from stockmaster s, itemmaster i where s.itemname=i.itemname group by itemname having maxqty<sum(openqty);";
            ResultSet rs2 = stmt.executeQuery(query2);
            while(rs2.next())
            {
                String item = rs2.getString("itemname");
                String d = "The stock of "+item+" has gone above its Maximum Qty.!";
                cbn.addItem(d);
            }
            rs1.close();
            rs2.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query="SELECT itemname, batchno, exp FROM STOCKMASTER;";
            ResultSet rs=stmt.executeQuery(query);
            String curdate = java.time.LocalDate.now().toString();
            int cury = Integer.parseInt(curdate.substring(0,4));
            int curm = Integer.parseInt(curdate.substring(5,7));
            int curd = Integer.parseInt(curdate.substring(8,10));
            while(rs.next())
            {
                String itemname = rs.getString("itemname");
                String batchno = rs.getString("batchno");
                String exp = rs.getString("exp");
                if(exp.compareTo("-")!=0)
                {
                    String cy = exp.substring(0,4);
                    String cm = exp.substring(5,7);
                    String cd = exp.substring(8,10);
                    int y = Integer.parseInt(cy);
                    int m = Integer.parseInt(cm);
                    int d = Integer.parseInt(cd);
                    String mon="";
                    if(cm.equals("01"))
                    {
                        mon="Jan";
                    }
                    else if(cm.equals("02"))
                    {
                        mon="Feb";
                    }
                    else if(cm.equals("03"))
                    {
                        mon="Mar";
                    }
                    else if(cm.equals("04"))
                    {
                        mon="Apr";
                    }
                    else if(cm.equals("05"))
                    {
                        mon="May";
                    }
                    else if(cm.equals("06"))
                    {
                        mon="Jun";
                    }
                    else if(cm.equals("07"))
                    {
                        mon="Jul";
                    }
                    else if(cm.equals("08"))
                    {
                        mon="Aug";
                    }
                    else if(cm.equals("09"))
                    {
                        mon="Sep";
                    }
                    else if(cm.equals("10"))
                    {
                        mon="Oct";
                    }
                    else if(cm.equals("11"))
                    {
                        mon="Nov";
                    }
                    else if(cm.equals("12"))
                    {
                        mon="Dec";
                    }
                    String date = d+" "+mon+", "+y;
                    if(y==cury)
                    {
                        if(m==curm)
                        {
                            if(d==curd)
                            {
                                cbn.addItem(itemname+"("+batchno+") will expire today!");
                            }
                            else if(d>curd)
                            {
                                cbn.addItem(itemname+"("+batchno+") will expire on "+date+"!");
                            }
                            else if(d<curd)
                            {
                                cbn.addItem(itemname+"("+batchno+") expired on "+date+"!");
                            }
                        }
                        else if(m<curm)
                        {
                            cbn.addItem(itemname+"("+batchno+") expired on "+date+"!");
                        }
                    }
                    else if(y<cury)
                    {
                        cbn.addItem(itemname+"("+batchno+") expired on "+date+"!");
                    }
                }
            }            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }   
    }//GEN-LAST:event_formWindowActivated

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:        
        if(scritem.isVisible())
        {
            itemEntry i= new itemEntry();
            i.setVisible(true);           
        }      
        else if(scrstock.isVisible())
        {
            stockEntry s= new stockEntry();
            s.setVisible(true);           
        }
        else if(scrvendor.isVisible())
        {
            vendorEntry v= new vendorEntry();
            v.setVisible(true);           
        }
        else if(scrpurchase.isVisible())
        {
            purchaseEntry p= new purchaseEntry();
            p.setVisible(true);           
        }
        else if(scrissue.isVisible())
        {
            issueEntry issue= new issueEntry();
            issue.setVisible(true);           
        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:        
        if(scrstock.isVisible())
        {     
            if(tblstock.getSelectedRow()!=-1)
            {
                int input = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
                if(input==0)
                {
                    try
                    {
                        DefaultTableModel model = ( DefaultTableModel) tblstock.getModel();
                        Class.forName("java.sql.Driver");   
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement(); 
                        String x = model.getValueAt(tblstock.getSelectedRow(), 1).toString();
                        String y=model.getValueAt(tblstock.getSelectedRow(),2).toString();
                        String delete = "delete from stockmaster where itemname = '"+x+"' and batchno='"+y+"';";
                        stmt.executeUpdate(delete);
                        JOptionPane.showMessageDialog(null,"Record deleted.");
                        stmt.close();
                        con.close();            
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }                    
                }                        
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select a row from the Table to Delete.");
            }        
        }
        else if(scritem.isVisible())        
        {
            if(tblitem.getSelectedRow()!=-1)
            {
                int input = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
                if(input==0)
                {
                    try
                    {
                        DefaultTableModel model = (DefaultTableModel) tblitem.getModel();
                        Class.forName("java.sql.Driver");   
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement(); 
                        String x = model.getValueAt(tblitem.getSelectedRow(), 1).toString();
                        String y=model.getValueAt(tblitem.getSelectedRow(),2).toString();
                        String delete = "delete from itemmaster where itemname = '"+x+"';";
                        stmt.executeUpdate(delete);
                        JOptionPane.showMessageDialog(null,"Record deleted.");
                        stmt.close();
                        con.close();            
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }                    
                }                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select a row from the Table to Delete.");
            }        
        }
        else if(scrvendor.isVisible())
        {
            if(tblvendor.getSelectedRow()!=-1)
            {
                int input = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
                if(input==0)
                {
                    try
                    {
                        DefaultTableModel model = ( DefaultTableModel) tblvendor.getModel();
                        Class.forName("java.sql.Driver");   
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement(); 
                        String x = model.getValueAt(tblvendor.getSelectedRow(), 1).toString();
                        String y=model.getValueAt(tblvendor.getSelectedRow(),2).toString();
                        String delete = "delete from vendormaster where vendorname = '"+x+"';";
                        stmt.executeUpdate(delete);
                        JOptionPane.showMessageDialog(null,"Record deleted.");
                        stmt.close();
                        con.close();            
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }                    
                }                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select a row from the Table to Delete.");
            }        
        }
        else if(scrpurchase.isVisible())
        {     
            if(tblpurchase.getSelectedRow()!=-1)
            {
                int input = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
                if(input==0)
                {
                    try
                    {
                        DefaultTableModel model = ( DefaultTableModel) tblpurchase.getModel();
                        Class.forName("java.sql.Driver");   
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement(); 
                        String x = model.getValueAt(tblpurchase.getSelectedRow(),3).toString();
                        String y=model.getValueAt(tblpurchase.getSelectedRow(),4).toString();
                        String delete = "delete from purchasemaster where itemname = '"+x+"' and batchno='"+y+"';";
                        stmt.executeUpdate(delete);
                        JOptionPane.showMessageDialog(null,"Record deleted.");
                        stmt.close();
                        con.close();            
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }                    
                }                        
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select a row from the Table to Delete.");
            }        
        }
        else if(scrissue.isVisible())
        {     
            if(tblissue.getSelectedRow()!=-1)
            {
                int input = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
                if(input==0)
                {
                    try
                    {
                        DefaultTableModel model = ( DefaultTableModel) tblissue.getModel();
                        Class.forName("java.sql.Driver");   
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                        Statement stmt = con.createStatement(); 
                        String x = model.getValueAt(tblissue.getSelectedRow(),1).toString();
                        String y=model.getValueAt(tblissue.getSelectedRow(),2).toString();
                        String delete = "delete from issuemaster where itemname = '"+x+"' and batchno='"+y+"';";
                        stmt.executeUpdate(delete);            
                        JOptionPane.showMessageDialog(null,"Record deleted.");
                        stmt.close();
                        con.close();            
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }                    
                }                        
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select a row from the Table to Delete.");
            }        
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        scrvendor.setVisible(false);
        scritem.setVisible(false);
        scrstock.setVisible(false);
        scrpurchase.setVisible(false);
        scrissue.setVisible(false);
        Color s=new Color(214,223,245);
        scrstock.getViewport().setBackground(s);
        scritem.getViewport().setBackground(s);
        scrvendor.getViewport().setBackground(s);
        scrpurchase.getViewport().setBackground(s);
        scrissue.getViewport().setBackground(s);
        btnadd.setVisible(false);
        btndelete.setVisible(false);
        btnse.setVisible(false);
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "select * from login";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            String user = rs.getString("username");
            lbluser.setText("Logged in as : "+user);
            if(user.equals("Master"))
            {
                btnadd.setVisible(true);
                btndelete.setVisible(true);            
                btnse.setVisible(true);
            }
            else
            {
                pnlop.setSize(370, 58);
                btnf.setVisible(false);
                btnse.setVisible(true);                        
                String q = "select*from access;";
                ResultSet rs1 = stmt.executeQuery(q);
                while(rs1.next())
                {
                    String f = rs1.getString("feature");
                    if(f.equals("add"))
                    {
                        btnadd.setVisible(true);
                        btnse.setText("Search");
                    }
                    else if(f.equals("delete"))
                    {
                        btndelete.setVisible(true);
                        btnse.setText("Search");
                    }
                    else if(f.equals("edit"))
                    {
                        btnse.setVisible(true);                        
                        btnse.setText("Search and Edit");
                    }
                    else if(f.equals(""))
                    {
                        btnse.setText("Search");
                    }
                }
                rs1.close();
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnseActionPerformed
        // TODO add your handling code here:
        if(scrstock.isVisible())
        {
            exploreStock s = new exploreStock();
            s.setVisible(true);            
        }
        else if(scritem.isVisible())
        {
            exploreItem i = new exploreItem();
            i.setVisible(true);            
        }
        else if(scrvendor.isVisible())
        {
            exploreVendor v= new exploreVendor();
            v.setVisible(true);        
        }
        else if(scrpurchase.isVisible())
        {
            explorePurchase p= new explorePurchase();
            p.setVisible(true);        
        }
        else if(scrissue.isVisible())
        {
            exploreIssue issue= new exploreIssue();
            issue.setVisible(true);        
        }
    }//GEN-LAST:event_btnseActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formKeyPressed

    private void tpstockStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tpstockStateChanged
        // TODO add your handling code here:        
        if(scrstock.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from stockmaster order by itemname, exp, openqty, batchno;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblstock.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String oq = rs.getString("openqty");
                    String exp = rs.getString("exp");
                    String date;
                    if(exp.equals("-"))
                    {
                        date = "-";
                    }
                    else
                    {
                        String cm = exp.substring(5,7);
                        String cy = exp.substring(0,4);
                        String cd = exp.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        date = cd+" "+mon+", "+cy;
                    }
                    model.addRow(new Object[] {r,itemname,batchno,oq,date});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }            
        }
        else if(scritem.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from itemmaster order by itemname;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblitem.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String cat = rs.getString("category");
                    String ven = rs.getString("vendor");
                    String ref = rs.getString("refrigeration");
                    String min = rs.getString("minQty");
                    String max = rs.getString("maxQty");
                    model.addRow(new Object[] {r,itemname,cat,ven,ref,min,max});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else if(scrvendor.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from vendormaster order by vendorname;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblvendor.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String vname=rs.getString("vendorname");
                    String address=rs.getString("address");
                    String city=rs.getString("city");
                    String mno=rs.getString("mobileno");
                    String lno=rs.getString("landlineno");
                    String p1=rs.getString("person1");
                    String p2=rs.getString("person2");
                    String email=rs.getString("email");
                    String tinno=rs.getString("tinno");
                    String gstno=rs.getString("gstno");
                    model.addRow(new Object[]{r,vname,address,city,mno,lno,p1,p2,email,tinno,gstno});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else if(scrpurchase.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from purchasemaster order by pur, vendorname, patientname, itemname, exp, openqty,batchno;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblpurchase.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String pat = rs.getString("patientname");
                    String ven = rs.getString("vendorname");
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String oq = rs.getString("openqty");
                    String exp = rs.getString("exp");
                    String date;
                    if(exp.equals("-"))
                    {
                        date = "-";
                    }
                    else
                    {
                        String cm = exp.substring(5,7);
                        String cy = exp.substring(0,4);
                        String cd = exp.substring(8,10);
                        String mon="";
                        if(cm.equals("01"))
                        {
                            mon="Jan";
                        }
                        else if(cm.equals("02"))
                        {
                            mon="Feb";
                        }
                        else if(cm.equals("03"))
                        {
                            mon="Mar";
                        }
                        else if(cm.equals("04"))
                        {
                            mon="Apr";
                        }
                        else if(cm.equals("05"))
                        {
                            mon="May";
                        }
                        else if(cm.equals("06"))
                        {
                            mon="Jun";
                        }
                        else if(cm.equals("07"))
                        {
                            mon="Jul";
                        }
                        else if(cm.equals("08"))
                        {
                            mon="Aug";
                        }
                        else if(cm.equals("09"))
                        {
                            mon="Sep";
                        }
                        else if(cm.equals("10"))
                        {
                            mon="Oct";
                        }
                        else if(cm.equals("11"))
                        {
                            mon="Nov";
                        }
                        else if(cm.equals("12"))
                        {
                            mon="Dec";
                        }
                        date = cd+" "+mon+", "+cy;
                    }
                    String pur = rs.getString("pur");
                    String date1;
                    String cm1 = pur.substring(5,7);
                    String cy1 = pur.substring(0,4);
                    String cd1 = pur.substring(8,10);
                    String mon1="";
                    if(cm1.equals("01"))
                    {
                        mon1="Jan";
                    }
                    else if(cm1.equals("02"))
                    {
                        mon1="Feb";
                    }
                    else if(cm1.equals("03"))
                    {
                        mon1="Mar";
                    }
                    else if(cm1.equals("04"))
                    {
                        mon1="Apr";
                    }
                    else if(cm1.equals("05"))
                    {
                        mon1="May";
                    }
                    else if(cm1.equals("06"))
                    {
                        mon1="Jun";
                    }
                    else if(cm1.equals("07"))
                    {
                        mon1="Jul";
                    }
                    else if(cm1.equals("08"))
                    {
                        mon1="Aug";
                    }
                    else if(cm1.equals("09"))
                    {
                        mon1="Sep";
                    }
                    else if(cm1.equals("10"))
                    {
                        mon1="Oct";
                    }
                    else if(cm1.equals("11"))
                    {
                        mon1="Nov";
                    }
                    else if(cm1.equals("12"))
                    {
                        mon1="Dec";
                    }
                    date1 = cd1+" "+mon1+", "+cy1;
                    model.addRow(new Object[] {r,pat,ven,itemname,batchno,oq,date,date1});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }            
        }
        else if(scrissue.isVisible())
        {
            try
            {
                Class.forName("java.sql.Driver");   
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
                Statement stmt = con.createStatement();
                String query = "Select * from issuemaster order by issuedate, itemname;";
                ResultSet rs = stmt.executeQuery(query);
                DefaultTableModel model=(DefaultTableModel)tblissue.getModel();
                while (model.getRowCount()>0)
                    model.removeRow(0);
                for(int r = 1;rs.next();r++)
                {
                    String itemname = rs.getString("itemname");
                    String batchno = rs.getString("batchno");
                    String issueqty = rs.getString("issueqty");
                    String empname = rs.getString("empname");
                    String issuedate = rs.getString("issuedate");
                    int y = Integer.parseInt(issuedate.substring(0,4));
                    String cm = issuedate.substring(5,7);
                    int m = Integer.parseInt(cm);
                    int d = Integer.parseInt(issuedate.substring(8,10));
                    String mon="";
                    if(cm.equals("01"))
                    {
                        mon="Jan";
                    }
                    else if(cm.equals("02"))
                    {
                        mon="Feb";
                    }
                    else if(cm.equals("03"))
                    {
                        mon="Mar";
                    }
                    else if(cm.equals("04"))
                    {
                        mon="Apr";
                    }
                    else if(cm.equals("05"))
                    {
                        mon="May";
                    }
                    else if(cm.equals("06"))
                    {
                        mon="Jun";
                    }
                    else if(cm.equals("07"))
                    {
                        mon="Jul";
                    }
                    else if(cm.equals("08"))
                    {
                        mon="Aug";
                    }
                    else if(cm.equals("09"))
                    {
                        mon="Sep";
                    }
                    else if(cm.equals("10"))
                    {
                        mon="Oct";
                    }
                    else if(cm.equals("11"))
                    {
                        mon="Nov";
                    }
                    else if(cm.equals("12"))
                    {
                        mon="Dec";
                    }
                    String date = d+" "+mon+", "+y;
                    String issuedept = rs.getString("issuedept");
                    model.addRow(new Object[] {r,itemname,batchno,issueqty,empname,date,issuedept});
                }            
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_tpstockStateChanged

    private void tpstockFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tpstockFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tpstockFocusGained

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formFocusGained

    private void tpstockComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tpstockComponentShown
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tpstockComponentShown

    private void btnloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloActionPerformed
        // TODO add your handling code here:
        int input = JOptionPane.showConfirmDialog(null, "Do you want to log out?");
        if(input==0)
        {
            System.gc();
            java.awt.Window win[] = java.awt.Window.getWindows(); 
            for(int i=0;i<win.length;i++)
            { 
                win[i].dispose(); 
                win[i]=null;
            } 
            userLogin u=new userLogin();
            u.setVisible(true);
        }
    }//GEN-LAST:event_btnloActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String delete = "delete from access";
            stmt.executeUpdate(delete);
            if(chka.isSelected())
            {
                String insert = "insert into access values('add');";
                stmt.executeUpdate(insert);
            }
            if(chkd.isSelected())
            {
                String insert = "insert into access values('delete');";
                stmt.executeUpdate(insert);
            }
            if(chke.isSelected())
            {
                String insert = "insert into access values('edit');";
                stmt.executeUpdate(insert);
            }
            if(chka.isSelected()==false&&chkd.isSelected()==false&&chke.isSelected()==false)
            {
                String insert = "insert into access values('');";
                stmt.executeUpdate(insert);
            }
            JOptionPane.showMessageDialog(null, "Accessibility updated.");
            dlgfeat.dispose();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfActionPerformed
        // TODO add your handling code here:
        dlgfeat.setSize(300, 180);
        dlgfeat.setVisible(true);
    }//GEN-LAST:event_btnfActionPerformed

    private void dlgfeatWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dlgfeatWindowOpened
        // TODO add your handling code here:
        ((java.awt.Frame)dlgfeat.getOwner()).setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
        try
        {
            Class.forName("java.sql.Driver");   
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/stockinventorymanagement","root","tabla10a");
            Statement stmt = con.createStatement();
            String query = "select*from access";
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String f = rs.getString("feature");
                if(f.equals("add"))
                {
                    chka.setSelected(true);
                }
                else if(f.equals("delete"))
                {
                    chkd.setSelected(true);
                }
                else if(f.equals("edit"))
                {
                    chke.setSelected(true);
                }
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_dlgfeatWindowOpened

    private void chkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stockMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stockMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stockMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stockMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stockMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnf;
    private javax.swing.JButton btnlo;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnse;
    private javax.swing.JComboBox<String> cbn;
    private javax.swing.JCheckBox chka;
    private javax.swing.JCheckBox chkd;
    private javax.swing.JCheckBox chke;
    private javax.swing.JDialog dlgfeat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lbluser;
    private javax.swing.JPanel pnlop;
    private javax.swing.JScrollPane scrissue;
    private javax.swing.JScrollPane scritem;
    private javax.swing.JScrollPane scrpurchase;
    private javax.swing.JScrollPane scrstock;
    private javax.swing.JScrollPane scrvendor;
    private javax.swing.JTable tblissue;
    private javax.swing.JTable tblitem;
    private javax.swing.JTable tblpurchase;
    private javax.swing.JTable tblstock;
    private javax.swing.JTable tblvendor;
    private javax.swing.JTabbedPane tpstock;
    // End of variables declaration//GEN-END:variables
}
